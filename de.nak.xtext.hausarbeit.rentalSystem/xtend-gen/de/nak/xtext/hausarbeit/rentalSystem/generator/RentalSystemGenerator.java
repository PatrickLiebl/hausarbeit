package de.nak.xtext.hausarbeit.rentalSystem.generator;

import de.nak.xtext.hausarbeit.rentalSystem.rentalSystem.Attribute;
import de.nak.xtext.hausarbeit.rentalSystem.rentalSystem.Customer;
import de.nak.xtext.hausarbeit.rentalSystem.rentalSystem.Deal;
import de.nak.xtext.hausarbeit.rentalSystem.rentalSystem.OfType;
import de.nak.xtext.hausarbeit.rentalSystem.rentalSystem.RentalSystem;
import de.nak.xtext.hausarbeit.rentalSystem.rentalSystem.RentalType;
import de.nak.xtext.hausarbeit.rentalWorkflow.rentalWorkflow.RentalWorkflow;
import de.nak.xtext.hausarbeit.rentalWorkflow.rentalWorkflow.State;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IterableExtensions;
import org.eclipse.xtext.xbase.lib.StringExtensions;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class RentalSystemGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    EList<EObject> _contents = resource.getContents();
    final EObject rentalSystem = IterableExtensions.<EObject>head(_contents);
    if ((rentalSystem instanceof RentalSystem)) {
      String _name = ((RentalSystem)rentalSystem).getName();
      String _firstUpper = StringExtensions.toFirstUpper(_name);
      String _plus = ("src/main/java/" + _firstUpper);
      String _plus_1 = (_plus + ".java");
      CharSequence _generateRentalSystemMain = this.generateRentalSystemMain(((RentalSystem)rentalSystem));
      fsa.generateFile(_plus_1, _generateRentalSystemMain);
      CharSequence _generateWebConfig = this.generateWebConfig();
      fsa.generateFile("src/main/java/WebConfiguration.java", _generateWebConfig);
      String _name_1 = ((RentalSystem)rentalSystem).getName();
      String _firstLower = StringExtensions.toFirstLower(_name_1);
      String _plus_2 = ("src/main/webapp/WEB-INF/views/jsp/" + _firstLower);
      String _plus_3 = (_plus_2 + ".jsp");
      CharSequence _generateIndexJsp = this.generateIndexJsp(((RentalSystem)rentalSystem));
      fsa.generateFile(_plus_3, _generateIndexJsp);
      CharSequence _generateCustomersIndexJsp = this.generateCustomersIndexJsp(((RentalSystem)rentalSystem));
      fsa.generateFile("src/main/webapp/WEB-INF/views/jsp/customersIndex.jsp", _generateCustomersIndexJsp);
      CharSequence _generateRentalTypesIndexJsp = this.generateRentalTypesIndexJsp(((RentalSystem)rentalSystem));
      fsa.generateFile("src/main/webapp/WEB-INF/views/jsp/rentalTypesIndex.jsp", _generateRentalTypesIndexJsp);
      CharSequence _generateDealsIndexJsp = this.generateDealsIndexJsp(((RentalSystem)rentalSystem));
      fsa.generateFile("src/main/webapp/WEB-INF/views/jsp/dealsIndex.jsp", _generateDealsIndexJsp);
      String _name_2 = ((RentalSystem)rentalSystem).getName();
      String _firstUpper_1 = StringExtensions.toFirstUpper(_name_2);
      String _plus_4 = ("src/main/java/" + _firstUpper_1);
      String _plus_5 = (_plus_4 + "Controller.java");
      CharSequence _generateIndexController = this.generateIndexController(((RentalSystem)rentalSystem));
      fsa.generateFile(_plus_5, _generateIndexController);
      CharSequence _generateCustomerIndexController = this.generateCustomerIndexController();
      fsa.generateFile("src/main/java/CustomersIndexController.java", _generateCustomerIndexController);
      CharSequence _generateRentalTypesIndexController = this.generateRentalTypesIndexController();
      fsa.generateFile("src/main/java/RentalTypesIndexController.java", _generateRentalTypesIndexController);
      CharSequence _generateDealsIndexController = this.generateDealsIndexController();
      fsa.generateFile("src/main/java/DealsIndexController.java", _generateDealsIndexController);
      EList<Customer> _customers = ((RentalSystem)rentalSystem).getCustomers();
      for (final Customer customer : _customers) {
        {
          String _name_3 = customer.getName();
          String _firstUpper_2 = StringExtensions.toFirstUpper(_name_3);
          String _plus_6 = ("src/main/java/" + _firstUpper_2);
          String _plus_7 = (_plus_6 + ".java");
          CharSequence _generateCustomerBeans = this.generateCustomerBeans(customer, ((RentalSystem)rentalSystem));
          fsa.generateFile(_plus_7, _generateCustomerBeans);
          String _name_4 = customer.getName();
          String _firstUpper_3 = StringExtensions.toFirstUpper(_name_4);
          String _plus_8 = ("src/main/java/I" + _firstUpper_3);
          String _plus_9 = (_plus_8 + "Repository.java");
          CharSequence _generateCustomerRepos = this.generateCustomerRepos(customer, ((RentalSystem)rentalSystem));
          fsa.generateFile(_plus_9, _generateCustomerRepos);
          String _name_5 = customer.getName();
          String _firstLower_1 = StringExtensions.toFirstLower(_name_5);
          String _plus_10 = ("src/main/webapp/WEB-INF/views/jsp/" + _firstLower_1);
          String _plus_11 = (_plus_10 + ".jsp");
          CharSequence _generateCustomerJsp = this.generateCustomerJsp(customer, ((RentalSystem)rentalSystem));
          fsa.generateFile(_plus_11, _generateCustomerJsp);
          String _name_6 = customer.getName();
          String _firstLower_2 = StringExtensions.toFirstLower(_name_6);
          String _plus_12 = ("src/main/webapp/WEB-INF/views/jsp/" + _firstLower_2);
          String _plus_13 = (_plus_12 + "Form.jsp");
          CharSequence _generateCustomerFormJsp = this.generateCustomerFormJsp(customer, ((RentalSystem)rentalSystem));
          fsa.generateFile(_plus_13, _generateCustomerFormJsp);
          String _name_7 = customer.getName();
          String _firstUpper_4 = StringExtensions.toFirstUpper(_name_7);
          String _plus_14 = ("src/main/java/" + _firstUpper_4);
          String _plus_15 = (_plus_14 + "Controller.java");
          CharSequence _generateCustomerController = this.generateCustomerController(customer, ((RentalSystem)rentalSystem));
          fsa.generateFile(_plus_15, _generateCustomerController);
        }
      }
      EList<RentalType> _rentalTypes = ((RentalSystem)rentalSystem).getRentalTypes();
      for (final RentalType rentalType : _rentalTypes) {
        {
          String _name_3 = rentalType.getName();
          String _firstUpper_2 = StringExtensions.toFirstUpper(_name_3);
          String _plus_6 = ("src/main/java/" + _firstUpper_2);
          String _plus_7 = (_plus_6 + ".java");
          CharSequence _generateRentalTypeBeans = this.generateRentalTypeBeans(rentalType, ((RentalSystem)rentalSystem));
          fsa.generateFile(_plus_7, _generateRentalTypeBeans);
          String _name_4 = rentalType.getName();
          String _firstUpper_3 = StringExtensions.toFirstUpper(_name_4);
          String _plus_8 = ("src/main/java/I" + _firstUpper_3);
          String _plus_9 = (_plus_8 + "Repository.java");
          CharSequence _generateRentalTypeRepos = this.generateRentalTypeRepos(rentalType, ((RentalSystem)rentalSystem));
          fsa.generateFile(_plus_9, _generateRentalTypeRepos);
          String _name_5 = rentalType.getName();
          String _firstLower_1 = StringExtensions.toFirstLower(_name_5);
          String _plus_10 = ("src/main/webapp/WEB-INF/views/jsp/" + _firstLower_1);
          String _plus_11 = (_plus_10 + ".jsp");
          CharSequence _generateRentalTypeJsp = this.generateRentalTypeJsp(rentalType, ((RentalSystem)rentalSystem));
          fsa.generateFile(_plus_11, _generateRentalTypeJsp);
          String _name_6 = rentalType.getName();
          String _firstLower_2 = StringExtensions.toFirstLower(_name_6);
          String _plus_12 = ("src/main/webapp/WEB-INF/views/jsp/" + _firstLower_2);
          String _plus_13 = (_plus_12 + "Form.jsp");
          CharSequence _generateRentalTypeFormJsp = this.generateRentalTypeFormJsp(rentalType, ((RentalSystem)rentalSystem));
          fsa.generateFile(_plus_13, _generateRentalTypeFormJsp);
          String _name_7 = rentalType.getName();
          String _firstUpper_4 = StringExtensions.toFirstUpper(_name_7);
          String _plus_14 = ("src/main/java/" + _firstUpper_4);
          String _plus_15 = (_plus_14 + "Controller.java");
          CharSequence _generateRentalTypeController = this.generateRentalTypeController(rentalType, ((RentalSystem)rentalSystem));
          fsa.generateFile(_plus_15, _generateRentalTypeController);
        }
      }
      EList<Deal> _deals = ((RentalSystem)rentalSystem).getDeals();
      for (final Deal deal : _deals) {
        {
          String _name_3 = deal.getName();
          String _firstUpper_2 = StringExtensions.toFirstUpper(_name_3);
          String _plus_6 = ("src/main/java/" + _firstUpper_2);
          String _plus_7 = (_plus_6 + ".java");
          CharSequence _generateDealBeans = this.generateDealBeans(deal, ((RentalSystem)rentalSystem));
          fsa.generateFile(_plus_7, _generateDealBeans);
          String _name_4 = deal.getName();
          String _firstUpper_3 = StringExtensions.toFirstUpper(_name_4);
          String _plus_8 = ("src/main/java/I" + _firstUpper_3);
          String _plus_9 = (_plus_8 + "Repository.java");
          CharSequence _generateDealRepos = this.generateDealRepos(deal, ((RentalSystem)rentalSystem));
          fsa.generateFile(_plus_9, _generateDealRepos);
          String _name_5 = deal.getName();
          String _firstLower_1 = StringExtensions.toFirstLower(_name_5);
          String _plus_10 = ("src/main/webapp/WEB-INF/views/jsp/" + _firstLower_1);
          String _plus_11 = (_plus_10 + ".jsp");
          CharSequence _generateDealJsp = this.generateDealJsp(deal, ((RentalSystem)rentalSystem));
          fsa.generateFile(_plus_11, _generateDealJsp);
          String _name_6 = deal.getName();
          String _firstLower_2 = StringExtensions.toFirstLower(_name_6);
          String _plus_12 = ("src/main/webapp/WEB-INF/views/jsp/" + _firstLower_2);
          String _plus_13 = (_plus_12 + "Form.jsp");
          CharSequence _generateDealFormJsp = this.generateDealFormJsp(deal, ((RentalSystem)rentalSystem));
          fsa.generateFile(_plus_13, _generateDealFormJsp);
          String _name_7 = deal.getName();
          String _firstUpper_4 = StringExtensions.toFirstUpper(_name_7);
          String _plus_14 = ("src/main/java/" + _firstUpper_4);
          String _plus_15 = (_plus_14 + "Controller.java");
          CharSequence _generateDealController = this.generateDealController(deal, ((RentalSystem)rentalSystem));
          fsa.generateFile(_plus_15, _generateDealController);
          String _name_8 = deal.getName();
          String _firstLower_3 = StringExtensions.toFirstLower(_name_8);
          String _plus_16 = ("src/main/webapp/WEB-INF/views/jsp/" + _firstLower_3);
          String _plus_17 = (_plus_16 + "StatesIndex.jsp");
          CharSequence _generateWorkflowsIndexJsp = this.generateWorkflowsIndexJsp(((RentalSystem)rentalSystem), deal);
          fsa.generateFile(_plus_17, _generateWorkflowsIndexJsp);
          RentalWorkflow _rentalWorkflow = deal.getRentalWorkflow();
          EList<State> _states = _rentalWorkflow.getStates();
          for (final State state : _states) {
            {
              String _name_9 = deal.getName();
              String _firstLower_4 = StringExtensions.toFirstLower(_name_9);
              String _plus_18 = ("src/main/webapp/WEB-INF/views/jsp/" + _firstLower_4);
              String _name_10 = state.getName();
              String _firstUpper_5 = StringExtensions.toFirstUpper(_name_10);
              String _plus_19 = (_plus_18 + _firstUpper_5);
              String _plus_20 = (_plus_19 + ".jsp");
              CharSequence _generateDealStateJsp = this.generateDealStateJsp(deal, ((RentalSystem)rentalSystem), state);
              fsa.generateFile(_plus_20, _generateDealStateJsp);
              String _name_11 = deal.getName();
              String _firstUpper_6 = StringExtensions.toFirstUpper(_name_11);
              String _plus_21 = ("src/main/java/" + _firstUpper_6);
              String _name_12 = state.getName();
              String _firstUpper_7 = StringExtensions.toFirstUpper(_name_12);
              String _plus_22 = (_plus_21 + _firstUpper_7);
              String _plus_23 = (_plus_22 + "Controller.java");
              CharSequence _generateDealStateController = this.generateDealStateController(deal, ((RentalSystem)rentalSystem), state);
              fsa.generateFile(_plus_23, _generateDealStateController);
              String _name_13 = deal.getName();
              String _firstLower_5 = StringExtensions.toFirstLower(_name_13);
              String _plus_24 = ("src/main/webapp/WEB-INF/views/jsp/" + _firstLower_5);
              String _name_14 = state.getName();
              String _firstUpper_8 = StringExtensions.toFirstUpper(_name_14);
              String _plus_25 = (_plus_24 + _firstUpper_8);
              String _plus_26 = (_plus_25 + "Form.jsp");
              CharSequence _generateDealStateFormJsp = this.generateDealStateFormJsp(deal, ((RentalSystem)rentalSystem));
              fsa.generateFile(_plus_26, _generateDealStateFormJsp);
              String _name_15 = deal.getName();
              String _firstUpper_9 = StringExtensions.toFirstUpper(_name_15);
              String _plus_27 = ("src/main/java/I" + _firstUpper_9);
              String _name_16 = state.getName();
              String _firstUpper_10 = StringExtensions.toFirstUpper(_name_16);
              String _plus_28 = (_plus_27 + _firstUpper_10);
              String _plus_29 = (_plus_28 + "Repository.java");
              CharSequence _generateDealStateRepos = this.generateDealStateRepos(deal, ((RentalSystem)rentalSystem), state);
              fsa.generateFile(_plus_29, _generateDealStateRepos);
              String _name_17 = deal.getName();
              String _firstUpper_11 = StringExtensions.toFirstUpper(_name_17);
              String _plus_30 = ("src/main/java/" + _firstUpper_11);
              String _name_18 = state.getName();
              String _firstUpper_12 = StringExtensions.toFirstUpper(_name_18);
              String _plus_31 = (_plus_30 + _firstUpper_12);
              String _plus_32 = (_plus_31 + ".java");
              CharSequence _generateDealStateBeans = this.generateDealStateBeans(deal, ((RentalSystem)rentalSystem), state);
              fsa.generateFile(_plus_32, _generateDealStateBeans);
            }
          }
        }
      }
    }
  }
  
  public CharSequence generateRentalSystemMain(final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package de.nordakademie.xtext.hausarbeit.rentalSystem.web;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("import org.springframework.boot.SpringApplication;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("import org.springframework.boot.autoconfigure.SpringBootApplication;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@SpringBootApplication");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public class ");
    String _name = rentalSystem.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "\t");
    _builder.append(" {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public static void main(String[] args) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("SpringApplication.run(");
    String _name_1 = rentalSystem.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper_1, "\t\t\t");
    _builder.append(".class, args);");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateIndexController(final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package de.nordakademie.xtext.hausarbeit.rentalSystem.web;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("import org.springframework.stereotype.Controller;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("import org.springframework.web.bind.annotation.RequestMapping;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("import org.springframework.web.servlet.ModelAndView;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Controller");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public class ");
    String _name = rentalSystem.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "\t");
    _builder.append("Controller {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@RequestMapping(value = \"/\")");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public ModelAndView index() {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("System.out.println(\"INDEX\");");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("ModelAndView mav = new ModelAndView(\"");
    String _name_1 = rentalSystem.getName();
    String _firstLower = StringExtensions.toFirstLower(_name_1);
    _builder.append(_firstLower, "\t\t\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("return mav;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateCustomerIndexController() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package de.nordakademie.xtext.hausarbeit.rentalSystem.web;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.springframework.stereotype.Controller;");
    _builder.newLine();
    _builder.append("import org.springframework.ui.Model;");
    _builder.newLine();
    _builder.append("import org.springframework.web.bind.annotation.RequestMapping;");
    _builder.newLine();
    _builder.append("import org.springframework.web.bind.annotation.RequestMethod;");
    _builder.newLine();
    _builder.append("import org.springframework.web.servlet.ModelAndView;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Controller");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public class CustomersIndexController {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@RequestMapping(value=\"/customersIndex\")");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public ModelAndView customersIndex(){");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("System.out.println(\"CUSTOMERSINDEX!\");");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("ModelAndView mav = new ModelAndView(\"customersIndex\");");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("return mav;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateRentalTypesIndexController() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package de.nordakademie.xtext.hausarbeit.rentalSystem.web;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("import org.springframework.stereotype.Controller;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("import org.springframework.web.bind.annotation.RequestMapping;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("import org.springframework.web.servlet.ModelAndView;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Controller");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public class RentalTypesIndexController {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@RequestMapping(value=\"/rentalTypesIndex\")");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public ModelAndView rentalTypesIndex(){");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("System.out.println(\"RENTALTYPESINDEX\");");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("ModelAndView mav = new ModelAndView(\"rentalTypesIndex\");");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("return mav;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateDealsIndexController() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package de.nordakademie.xtext.hausarbeit.rentalSystem.web;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("import org.springframework.stereotype.Controller;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("import org.springframework.web.bind.annotation.RequestMapping;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("import org.springframework.web.servlet.ModelAndView;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Controller");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public class DealsIndexController {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@RequestMapping(value=\"/dealsIndex\")");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public ModelAndView dealsIndex(){");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("System.out.println(\"DEALSINDEX\");");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("ModelAndView mav = new ModelAndView(\"dealsIndex\");");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("return mav;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateCustomerController(final Customer customer, final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package de.nordakademie.xtext.hausarbeit.rentalSystem.web;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.springframework.beans.factory.annotation.Autowired;");
    _builder.newLine();
    _builder.append("import org.springframework.stereotype.Controller;");
    _builder.newLine();
    _builder.append("import org.springframework.web.bind.annotation.RequestMapping;");
    _builder.newLine();
    _builder.append("import org.springframework.web.servlet.ModelAndView;");
    _builder.newLine();
    _builder.append("import org.springframework.web.bind.annotation.PathVariable;");
    _builder.newLine();
    _builder.append("import org.springframework.web.bind.annotation.RequestMethod;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Controller");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public class ");
    String _name = customer.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "\t");
    _builder.append("Controller {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Autowired");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("private I");
    String _name_1 = customer.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper_1, "\t\t");
    _builder.append("Repository customerRepository;");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@RequestMapping(value=\"/");
    String _name_2 = customer.getName();
    String _firstLower = StringExtensions.toFirstLower(_name_2);
    _builder.append(_firstLower, "\t\t");
    _builder.append("\")");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("public ModelAndView ");
    String _name_3 = customer.getName();
    String _firstLower_1 = StringExtensions.toFirstLower(_name_3);
    _builder.append(_firstLower_1, "\t\t");
    _builder.append("Show(){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("System.out.println(\"");
    String _name_4 = customer.getName();
    String _firstUpper_2 = StringExtensions.toFirstUpper(_name_4);
    _builder.append(_firstUpper_2, "\t\t\t");
    _builder.append("Controller!\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("ModelAndView mav = new ModelAndView(\"");
    String _name_5 = customer.getName();
    String _firstLower_2 = StringExtensions.toFirstLower(_name_5);
    _builder.append(_firstLower_2, "\t\t\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("mav.addObject(\"customers\", customerRepository.findAll());");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("return mav;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@RequestMapping(value=\"/");
    String _name_6 = customer.getName();
    String _firstLower_3 = StringExtensions.toFirstLower(_name_6);
    _builder.append(_firstLower_3, "\t\t");
    _builder.append("Form\", method=RequestMethod.GET)");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("public ModelAndView ");
    String _name_7 = customer.getName();
    String _firstLower_4 = StringExtensions.toFirstLower(_name_7);
    _builder.append(_firstLower_4, "\t\t");
    _builder.append("ShowForm(){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("ModelAndView mav = new ModelAndView(\"");
    String _name_8 = customer.getName();
    String _firstLower_5 = StringExtensions.toFirstLower(_name_8);
    _builder.append(_firstLower_5, "\t\t\t");
    _builder.append("Form\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("return mav;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@RequestMapping(value=\"/");
    String _name_9 = customer.getName();
    String _firstLower_6 = StringExtensions.toFirstLower(_name_9);
    _builder.append(_firstLower_6, "\t\t");
    _builder.append("Form\", method=RequestMethod.POST)");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("public ModelAndView ");
    String _name_10 = customer.getName();
    String _firstLower_7 = StringExtensions.toFirstLower(_name_10);
    _builder.append(_firstLower_7, "\t\t");
    _builder.append("SaveForm(");
    String _name_11 = customer.getName();
    String _firstUpper_3 = StringExtensions.toFirstUpper(_name_11);
    _builder.append(_firstUpper_3, "\t\t");
    _builder.append(" ");
    String _name_12 = customer.getName();
    String _firstLower_8 = StringExtensions.toFirstLower(_name_12);
    _builder.append(_firstLower_8, "\t\t");
    _builder.append("){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("customerRepository.save(");
    String _name_13 = customer.getName();
    String _firstLower_9 = StringExtensions.toFirstLower(_name_13);
    _builder.append(_firstLower_9, "\t\t\t");
    _builder.append(");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("ModelAndView mav = new ModelAndView(\"");
    String _name_14 = customer.getName();
    String _firstLower_10 = StringExtensions.toFirstLower(_name_14);
    _builder.append(_firstLower_10, "\t\t\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("mav.addObject(\"customers\", customerRepository.findAll());");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("return mav;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateRentalTypeController(final RentalType rentalType, final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package de.nordakademie.xtext.hausarbeit.rentalSystem.web;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.springframework.beans.factory.annotation.Autowired;");
    _builder.newLine();
    _builder.append("import org.springframework.stereotype.Controller;");
    _builder.newLine();
    _builder.append("import org.springframework.web.bind.annotation.RequestMapping;");
    _builder.newLine();
    _builder.append("import org.springframework.web.servlet.ModelAndView;");
    _builder.newLine();
    _builder.append("import org.springframework.web.bind.annotation.PathVariable;");
    _builder.newLine();
    _builder.append("import org.springframework.web.bind.annotation.RequestMethod;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Controller");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public class ");
    String _name = rentalType.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "\t");
    _builder.append("Controller {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Autowired");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("private I");
    String _name_1 = rentalType.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper_1, "\t\t");
    _builder.append("Repository rentalTypeRepository;");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@RequestMapping(value=\"/");
    String _name_2 = rentalType.getName();
    String _firstLower = StringExtensions.toFirstLower(_name_2);
    _builder.append(_firstLower, "\t\t");
    _builder.append("\")");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("public ModelAndView ");
    String _name_3 = rentalType.getName();
    String _firstLower_1 = StringExtensions.toFirstLower(_name_3);
    _builder.append(_firstLower_1, "\t\t");
    _builder.append("Show(){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("System.out.println(\"");
    String _name_4 = rentalType.getName();
    String _firstUpper_2 = StringExtensions.toFirstUpper(_name_4);
    _builder.append(_firstUpper_2, "\t\t\t");
    _builder.append("Controller!\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("ModelAndView mav = new ModelAndView(\"");
    String _name_5 = rentalType.getName();
    String _firstLower_2 = StringExtensions.toFirstLower(_name_5);
    _builder.append(_firstLower_2, "\t\t\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("mav.addObject(\"rentalTypes\", rentalTypeRepository.findAll());");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("return mav;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@RequestMapping(value=\"/");
    String _name_6 = rentalType.getName();
    String _firstLower_3 = StringExtensions.toFirstLower(_name_6);
    _builder.append(_firstLower_3, "\t\t");
    _builder.append("Form\", method=RequestMethod.GET)");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("public ModelAndView ");
    String _name_7 = rentalType.getName();
    String _firstLower_4 = StringExtensions.toFirstLower(_name_7);
    _builder.append(_firstLower_4, "\t\t");
    _builder.append("ShowForm(){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("ModelAndView mav = new ModelAndView(\"");
    String _name_8 = rentalType.getName();
    String _firstLower_5 = StringExtensions.toFirstLower(_name_8);
    _builder.append(_firstLower_5, "\t\t\t");
    _builder.append("Form\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("return mav;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@RequestMapping(value=\"/");
    String _name_9 = rentalType.getName();
    String _firstLower_6 = StringExtensions.toFirstLower(_name_9);
    _builder.append(_firstLower_6, "\t\t");
    _builder.append("Form\", method=RequestMethod.POST)");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("public ModelAndView ");
    String _name_10 = rentalType.getName();
    String _firstLower_7 = StringExtensions.toFirstLower(_name_10);
    _builder.append(_firstLower_7, "\t\t");
    _builder.append("SaveForm(");
    String _name_11 = rentalType.getName();
    String _firstUpper_3 = StringExtensions.toFirstUpper(_name_11);
    _builder.append(_firstUpper_3, "\t\t");
    _builder.append(" ");
    String _name_12 = rentalType.getName();
    String _firstLower_8 = StringExtensions.toFirstLower(_name_12);
    _builder.append(_firstLower_8, "\t\t");
    _builder.append("){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("rentalTypeRepository.save(");
    String _name_13 = rentalType.getName();
    String _firstLower_9 = StringExtensions.toFirstLower(_name_13);
    _builder.append(_firstLower_9, "\t\t\t");
    _builder.append(");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("ModelAndView mav = new ModelAndView(\"");
    String _name_14 = rentalType.getName();
    String _firstLower_10 = StringExtensions.toFirstLower(_name_14);
    _builder.append(_firstLower_10, "\t\t\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("mav.addObject(\"rentalTypes\", rentalTypeRepository.findAll());");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("return mav;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateDealController(final Deal deal, final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package de.nordakademie.xtext.hausarbeit.rentalSystem.web;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.springframework.beans.factory.annotation.Autowired;");
    _builder.newLine();
    _builder.append("import org.springframework.stereotype.Controller;");
    _builder.newLine();
    _builder.append("import org.springframework.web.bind.annotation.RequestMapping;");
    _builder.newLine();
    _builder.append("import org.springframework.web.servlet.ModelAndView;");
    _builder.newLine();
    _builder.append("import org.springframework.web.bind.annotation.RequestMethod;");
    _builder.newLine();
    _builder.append("import org.springframework.web.bind.annotation.RequestParam;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Controller");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public class ");
    String _name = deal.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "\t");
    _builder.append("Controller {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Autowired");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("private I");
    String _name_1 = deal.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper_1, "\t\t");
    _builder.append("Repository dealRepository;");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Autowired");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("private I");
    Customer _customer = deal.getCustomer();
    String _name_2 = _customer.getName();
    String _firstUpper_2 = StringExtensions.toFirstUpper(_name_2);
    _builder.append(_firstUpper_2, "\t\t");
    _builder.append("Repository customerRepository;");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Autowired");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("private I");
    RentalType _rentalType = deal.getRentalType();
    String _name_3 = _rentalType.getName();
    String _firstUpper_3 = StringExtensions.toFirstUpper(_name_3);
    _builder.append(_firstUpper_3, "\t\t");
    _builder.append("Repository rentalTypeRepository;");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@RequestMapping(value=\"/");
    String _name_4 = deal.getName();
    String _firstLower = StringExtensions.toFirstLower(_name_4);
    _builder.append(_firstLower, "\t\t");
    _builder.append("\")");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("public ModelAndView ");
    String _name_5 = deal.getName();
    String _firstLower_1 = StringExtensions.toFirstLower(_name_5);
    _builder.append(_firstLower_1, "\t\t");
    _builder.append("Show(){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("ModelAndView mav = new ModelAndView(\"");
    String _name_6 = deal.getName();
    String _firstLower_2 = StringExtensions.toFirstLower(_name_6);
    _builder.append(_firstLower_2, "\t\t\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("mav.addObject(\"deals\", dealRepository.findAll());");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("return mav;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@RequestMapping(value=\"/");
    String _name_7 = deal.getName();
    String _firstLower_3 = StringExtensions.toFirstLower(_name_7);
    _builder.append(_firstLower_3, "\t\t");
    _builder.append("\", method=RequestMethod.POST)");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("public ModelAndView ");
    String _name_8 = deal.getName();
    String _firstLower_4 = StringExtensions.toFirstLower(_name_8);
    _builder.append(_firstLower_4, "\t\t\t");
    RentalWorkflow _rentalWorkflow = deal.getRentalWorkflow();
    EList<State> _startState = _rentalWorkflow.getStartState();
    State _head = IterableExtensions.<State>head(_startState);
    String _name_9 = _head.getName();
    String _firstUpper_4 = StringExtensions.toFirstUpper(_name_9);
    _builder.append(_firstUpper_4, "\t\t\t");
    _builder.append("Show(");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("@RequestParam(\"selectedDealId\") String selectedDealId){");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("ModelAndView mav = new ModelAndView(\"");
    String _name_10 = deal.getName();
    String _firstLower_5 = StringExtensions.toFirstLower(_name_10);
    _builder.append(_firstLower_5, "\t\t\t\t");
    RentalWorkflow _rentalWorkflow_1 = deal.getRentalWorkflow();
    EList<State> _startState_1 = _rentalWorkflow_1.getStartState();
    State _head_1 = IterableExtensions.<State>head(_startState_1);
    EList<State> _transition = _head_1.getTransition();
    State _head_2 = IterableExtensions.<State>head(_transition);
    String _name_11 = _head_2.getName();
    String _firstUpper_5 = StringExtensions.toFirstUpper(_name_11);
    _builder.append(_firstUpper_5, "\t\t\t\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    _builder.append("mav.addObject(\"selectedDeal\", dealRepository.findOne(Long.parseLong(selectedDealId)));");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("return  mav;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@RequestMapping(value=\"/");
    String _name_12 = deal.getName();
    String _firstLower_6 = StringExtensions.toFirstLower(_name_12);
    _builder.append(_firstLower_6, "\t\t");
    _builder.append("Form\", method=RequestMethod.POST)");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("public ModelAndView ");
    String _name_13 = deal.getName();
    String _firstLower_7 = StringExtensions.toFirstLower(_name_13);
    _builder.append(_firstLower_7, "\t\t\t");
    _builder.append("SaveForm(");
    String _name_14 = deal.getName();
    String _firstUpper_6 = StringExtensions.toFirstUpper(_name_14);
    _builder.append(_firstUpper_6, "\t\t\t");
    _builder.append(" ");
    String _name_15 = deal.getName();
    String _firstLower_8 = StringExtensions.toFirstLower(_name_15);
    _builder.append(_firstLower_8, "\t\t\t");
    _builder.append(",");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("@RequestParam(\"selectionCustomerId\") String customerId, @RequestParam(\"selectionTypeId\") String typeId){");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    Customer _customer_1 = deal.getCustomer();
    String _name_16 = _customer_1.getName();
    String _firstUpper_7 = StringExtensions.toFirstUpper(_name_16);
    _builder.append(_firstUpper_7, "\t\t\t\t");
    _builder.append(" ");
    Customer _customer_2 = deal.getCustomer();
    String _name_17 = _customer_2.getName();
    String _firstLower_9 = StringExtensions.toFirstLower(_name_17);
    _builder.append(_firstLower_9, "\t\t\t\t");
    _builder.append(" = customerRepository.findOne(Long.parseLong(customerId));");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    RentalType _rentalType_1 = deal.getRentalType();
    String _name_18 = _rentalType_1.getName();
    String _firstUpper_8 = StringExtensions.toFirstUpper(_name_18);
    _builder.append(_firstUpper_8, "\t\t\t\t");
    _builder.append(" ");
    RentalType _rentalType_2 = deal.getRentalType();
    String _name_19 = _rentalType_2.getName();
    String _firstLower_10 = StringExtensions.toFirstLower(_name_19);
    _builder.append(_firstLower_10, "\t\t\t\t");
    _builder.append(" = rentalTypeRepository.findOne(Long.parseLong(typeId));");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    String _name_20 = deal.getName();
    String _firstLower_11 = StringExtensions.toFirstLower(_name_20);
    _builder.append(_firstLower_11, "\t\t\t\t");
    _builder.append(".set");
    Customer _customer_3 = deal.getCustomer();
    String _name_21 = _customer_3.getName();
    String _firstUpper_9 = StringExtensions.toFirstUpper(_name_21);
    _builder.append(_firstUpper_9, "\t\t\t\t");
    _builder.append("(");
    Customer _customer_4 = deal.getCustomer();
    String _name_22 = _customer_4.getName();
    String _firstLower_12 = StringExtensions.toFirstLower(_name_22);
    _builder.append(_firstLower_12, "\t\t\t\t");
    _builder.append(");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    String _name_23 = deal.getName();
    String _firstLower_13 = StringExtensions.toFirstLower(_name_23);
    _builder.append(_firstLower_13, "\t\t\t\t");
    _builder.append(".set");
    RentalType _rentalType_3 = deal.getRentalType();
    String _name_24 = _rentalType_3.getName();
    String _firstUpper_10 = StringExtensions.toFirstUpper(_name_24);
    _builder.append(_firstUpper_10, "\t\t\t\t");
    _builder.append("(");
    RentalType _rentalType_4 = deal.getRentalType();
    String _name_25 = _rentalType_4.getName();
    String _firstLower_14 = StringExtensions.toFirstLower(_name_25);
    _builder.append(_firstLower_14, "\t\t\t\t");
    _builder.append(");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    _builder.append("dealRepository.save(");
    String _name_26 = deal.getName();
    String _firstLower_15 = StringExtensions.toFirstLower(_name_26);
    _builder.append(_firstLower_15, "\t\t\t\t");
    _builder.append(");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    _builder.append("ModelAndView mav = new ModelAndView(\"");
    String _name_27 = deal.getName();
    String _firstLower_16 = StringExtensions.toFirstLower(_name_27);
    _builder.append(_firstLower_16, "\t\t\t\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    _builder.append("mav.addObject(\"deals\", dealRepository.findAll());");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("return mav;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@RequestMapping(value=\"/");
    String _name_28 = deal.getName();
    String _firstLower_17 = StringExtensions.toFirstLower(_name_28);
    _builder.append(_firstLower_17, "\t\t");
    _builder.append("Form\", method=RequestMethod.GET)");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("public ModelAndView ");
    String _name_29 = deal.getName();
    String _firstLower_18 = StringExtensions.toFirstLower(_name_29);
    _builder.append(_firstLower_18, "\t\t");
    _builder.append("ShowForm(){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("ModelAndView mav = new ModelAndView(\"");
    String _name_30 = deal.getName();
    String _firstLower_19 = StringExtensions.toFirstLower(_name_30);
    _builder.append(_firstLower_19, "\t\t\t");
    _builder.append("Form\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("mav.addObject(\"customers\", customerRepository.findAll());");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("mav.addObject(\"rentalTypes\", rentalTypeRepository.findAll());");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("return mav;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@RequestMapping(value=\"/");
    String _name_31 = deal.getName();
    String _firstLower_20 = StringExtensions.toFirstLower(_name_31);
    _builder.append(_firstLower_20, "\t\t");
    _builder.append("StatesIndex\")");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("public ModelAndView ");
    String _name_32 = deal.getName();
    String _firstLower_21 = StringExtensions.toFirstLower(_name_32);
    _builder.append(_firstLower_21, "\t\t\t");
    _builder.append("ShowStateIndex(){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    _builder.append("ModelAndView mav = new ModelAndView(\"");
    String _name_33 = deal.getName();
    String _firstLower_22 = StringExtensions.toFirstLower(_name_33);
    _builder.append(_firstLower_22, "\t\t\t\t");
    _builder.append("StatesIndex\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    _builder.append("return mav;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateDealStateController(final Deal deal, final RentalSystem rentalSystem, final State state) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package de.nordakademie.xtext.hausarbeit.rentalSystem.web;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.springframework.beans.factory.annotation.Autowired;");
    _builder.newLine();
    _builder.append("import org.springframework.stereotype.Controller;");
    _builder.newLine();
    _builder.append("import org.springframework.web.bind.annotation.RequestMapping;");
    _builder.newLine();
    _builder.append("import org.springframework.web.servlet.ModelAndView;");
    _builder.newLine();
    _builder.append("import org.springframework.web.bind.annotation.RequestMethod;");
    _builder.newLine();
    _builder.append("import org.springframework.web.bind.annotation.RequestParam;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Controller");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public class ");
    String _name = deal.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "\t");
    String _name_1 = state.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper_1, "\t");
    _builder.append("Controller {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@RequestMapping(value=\"/");
    String _name_2 = deal.getName();
    String _firstLower = StringExtensions.toFirstLower(_name_2);
    _builder.append(_firstLower, "\t\t");
    String _name_3 = state.getName();
    String _firstUpper_2 = StringExtensions.toFirstUpper(_name_3);
    _builder.append(_firstUpper_2, "\t\t");
    _builder.append("\")");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("public ModelAndView ");
    String _name_4 = deal.getName();
    String _firstLower_1 = StringExtensions.toFirstLower(_name_4);
    _builder.append(_firstLower_1, "\t\t");
    String _name_5 = state.getName();
    String _firstUpper_3 = StringExtensions.toFirstUpper(_name_5);
    _builder.append(_firstUpper_3, "\t\t");
    _builder.append("Transition(){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("ModelAndView mav = new ModelAndView(\"");
    String _name_6 = deal.getName();
    String _firstLower_2 = StringExtensions.toFirstLower(_name_6);
    _builder.append(_firstLower_2, "\t\t\t");
    String _name_7 = state.getName();
    String _firstUpper_4 = StringExtensions.toFirstUpper(_name_7);
    _builder.append(_firstUpper_4, "\t\t\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("return mav;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateWebConfig() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package de.nordakademie.xtext.hausarbeit.rentalSystem.web;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("import org.springframework.context.annotation.Bean;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("import org.springframework.context.annotation.Configuration;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("import org.springframework.web.servlet.ViewResolver;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("import org.springframework.web.servlet.view.InternalResourceViewResolver;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("import org.springframework.web.servlet.view.JstlView;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Configuration");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public class WebConfiguration extends WebMvcConfigurerAdapter {");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Bean");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public ViewResolver viewResolver() {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("final InternalResourceViewResolver viewResolver = new InternalResourceViewResolver();");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("viewResolver.setViewClass(JstlView.class);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("viewResolver.setPrefix(\"/WEB-INF/views/jsp/\");");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("viewResolver.setSuffix(\".jsp\");");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("return viewResolver;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateIndexJsp(final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateJspHeader = this.generateJspHeader(rentalSystem);
    _builder.append(_generateJspHeader, "");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("<a href=\"customersIndex\" class=\"btn btn-primary\">Customers</a>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<a href=\"rentalTypesIndex\" class=\"btn btn-primary\">RentalTypes</a>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<a href=\"dealsIndex\" class=\"btn btn-primary\">Deals</a>");
    _builder.newLine();
    CharSequence _generateJspFooter = this.generateJspFooter(rentalSystem);
    _builder.append(_generateJspFooter, "");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateJspHeader(final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<%@taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\"%>");
    _builder.newLine();
    _builder.append("<!DOCTYPE html>");
    _builder.newLine();
    _builder.append("<html lang=\"de\" xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:th=\"http://www.thymeleaf.org\">");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<head>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<meta charset=\"utf-8\">");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<title>");
    String _title = rentalSystem.getTitle();
    _builder.append(_title, "\t\t");
    _builder.append("</title>");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<link href=\"${pageContext.request.contextPath}/css/simple-sidebar.css\" rel=\"stylesheet\" type=\"text/css\">");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<link rel=\"stylesheet\" type=\"text/css\" href=\"${pageContext.request.contextPath}/css/bootstrap.css\" />");
    _builder.newLine();
    _builder.append("  \t\t");
    _builder.append("<script type=\"text/javascript\" src=\"${pageContext.request.contextPath}/js/bootstrap.js\" ></script>");
    _builder.newLine();
    _builder.append("  \t\t");
    _builder.append("<script type=\"text/javascript\" src=\"${pageContext.request.contextPath}/js/jquery-1.11.3.min.js\" ></script>");
    _builder.newLine();
    _builder.append("  \t\t");
    _builder.append("<style type=\"text/css\">");
    _builder.newLine();
    _builder.append("  \t\t\t");
    _builder.append("body {");
    _builder.newLine();
    _builder.append("  \t\t\t\t");
    _builder.append("background-color:white; ");
    _builder.newLine();
    _builder.append("  \t\t\t\t");
    _builder.append("color:black;");
    _builder.newLine();
    _builder.append("  \t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("  \t\t");
    _builder.append("</style>");
    _builder.newLine();
    _builder.append("  \t");
    _builder.append("</head>");
    _builder.newLine();
    _builder.append("  \t");
    _builder.append("<body>");
    _builder.newLine();
    _builder.append("  \t");
    _builder.append("<div class=\"col-sm-12\" style=\"background-color:white;\">");
    _builder.newLine();
    _builder.append("  \t\t");
    _builder.append("<!-- Header -->");
    _builder.newLine();
    _builder.append("      \t");
    _builder.append("<h1>");
    String _name = rentalSystem.getName();
    _builder.append(_name, "      \t");
    _builder.append("</h1>");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<div class=\"col-sm-12\" style=\"background-color:white;\">");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<!--  Header Menu -->");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<nav class=\"navbar navbar-inverse\">");
    _builder.newLine();
    _builder.append("\t\t  ");
    _builder.append("<div class=\"container-fluid\">");
    _builder.newLine();
    _builder.append("\t\t    ");
    _builder.append("<div class=\"navbar-header\">");
    _builder.newLine();
    _builder.append("\t\t      ");
    _builder.append("<a class=\"navbar-brand\" href=\"#\">");
    String _title_1 = rentalSystem.getTitle();
    _builder.append(_title_1, "\t\t      ");
    _builder.append("</a>");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t    ");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t    ");
    _builder.append("<ul class=\"nav navbar-nav\">");
    _builder.newLine();
    _builder.append("\t\t      ");
    _builder.append("<li class=\"active\"><a href=\"/\">Home</a></li>");
    _builder.newLine();
    _builder.append("\t\t      ");
    _builder.append("<li><a href=\"customersIndex\">Customers</a></li>");
    _builder.newLine();
    _builder.append("\t\t      ");
    _builder.append("<li><a href=\"rentalTypesIndex\" >RentalTypes</a></li>");
    _builder.newLine();
    _builder.append("\t\t      ");
    _builder.append("<li><a href=\"dealsIndex\">Deals</a></li>");
    _builder.newLine();
    _builder.append("\t\t    ");
    _builder.append("</ul>");
    _builder.newLine();
    _builder.append("\t\t  ");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</nav>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<!--  side-menu -->");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<div class=\"col-sm-2\" style=\"background-color:white;\">");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<div id=\"wrapper\">");
    _builder.newLine();
    _builder.append("\t\t        ");
    _builder.append("<div id=\"sidebar-wrapper\">");
    _builder.newLine();
    _builder.append("\t\t            ");
    _builder.append("<ul class=\"sidebar-nav\">");
    _builder.newLine();
    _builder.append("\t\t                ");
    _builder.append("<li class=\"sidebar-brand\"><a href=\"#\"> Start Bootstrap</a></li>");
    _builder.newLine();
    _builder.append("\t\t                ");
    _builder.append("<li><a href=\"#\">Dashboard</a></li>");
    _builder.newLine();
    _builder.append("\t\t                ");
    _builder.append("<li><a href=\"#\">Shortcuts</a></li>");
    _builder.newLine();
    _builder.append("\t\t                ");
    _builder.append("<li><a href=\"#\">Overview</a></li>");
    _builder.newLine();
    _builder.append("\t\t                ");
    _builder.append("<li><a href=\"#\">Events</a></li>");
    _builder.newLine();
    _builder.append("\t\t                ");
    _builder.append("<li><a href=\"#\">About</a></li>");
    _builder.newLine();
    _builder.append("\t\t                ");
    _builder.append("<li><a href=\"#\">Services</a></li>");
    _builder.newLine();
    _builder.append("\t\t                ");
    _builder.append("<li><a href=\"#\">Contact</a></li>");
    _builder.newLine();
    _builder.append("\t\t            ");
    _builder.append("</ul>");
    _builder.newLine();
    _builder.append("\t\t        ");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<div class=\"col-sm-10\" style=\"background-color:white;\">");
    _builder.newLine();
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateJspFooter(final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("  \t");
    _builder.append("</body>");
    _builder.newLine();
    _builder.append("</html>");
    _builder.newLine();
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateCustomersIndexJsp(final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateJspHeader = this.generateJspHeader(rentalSystem);
    _builder.append(_generateJspHeader, "");
    _builder.newLineIfNotEmpty();
    _builder.append("<h1>Customers</h1>");
    _builder.newLine();
    _builder.append("<table class=\"table table-striped\">");
    _builder.newLine();
    int i = 0;
    _builder.newLineIfNotEmpty();
    _builder.append("<thead>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<td>No.</td>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<td>Name</td>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("</thead>");
    _builder.newLine();
    _builder.append("<tbody>");
    _builder.newLine();
    {
      EList<Customer> _customers = rentalSystem.getCustomers();
      for(final Customer customer : _customers) {
        _builder.append("<tr>");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("<td>");
        _builder.append(i, "\t");
        _builder.append("</td>");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("<td><a href=\"");
        String _name = customer.getName();
        _builder.append(_name, "\t");
        _builder.append("\">");
        String _name_1 = customer.getName();
        _builder.append(_name_1, "\t");
        _builder.append("</a></td>");
        _builder.newLineIfNotEmpty();
        _builder.append("</tr>");
        _builder.newLine();
        int _plusPlus = i++;
        _builder.append(_plusPlus, "");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("</tbody>");
    _builder.newLine();
    _builder.append("</table>");
    _builder.newLine();
    _builder.append("<a href=\"/\" class=\"btn btn-primary\">Index</a>");
    _builder.newLine();
    CharSequence _generateJspFooter = this.generateJspFooter(rentalSystem);
    _builder.append(_generateJspFooter, "");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateRentalTypesIndexJsp(final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateJspHeader = this.generateJspHeader(rentalSystem);
    _builder.append(_generateJspHeader, "");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("<h1>Rental-Types</h1>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<table class=\"table table-striped\">");
    _builder.newLine();
    _builder.append("\t\t");
    int i = 0;
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("<thead>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<td>No.</td>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<td>Name</td>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</thead>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<tbody>");
    _builder.newLine();
    {
      EList<RentalType> _rentalTypes = rentalSystem.getRentalTypes();
      for(final RentalType rentalType : _rentalTypes) {
        _builder.append("\t\t");
        _builder.append("<tr>");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("<td>");
        _builder.append(i, "\t\t\t");
        _builder.append("</td>");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("<td><a href=\"");
        String _name = rentalType.getName();
        _builder.append(_name, "\t\t\t");
        _builder.append("\">");
        String _name_1 = rentalType.getName();
        _builder.append(_name_1, "\t\t\t");
        _builder.append("</a></td>");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("</tr>");
        _builder.newLine();
        _builder.append("\t\t");
        int _plusPlus = i++;
        _builder.append(_plusPlus, "\t\t");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t\t");
    _builder.append("</tbody>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</table>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<a href=\"/\" class=\"btn btn-primary\">Index</a>");
    _builder.newLine();
    CharSequence _generateJspFooter = this.generateJspFooter(rentalSystem);
    _builder.append(_generateJspFooter, "");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence generateWorkflowsIndexJsp(final RentalSystem rentalSystem, final Deal deal) {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateJspHeader = this.generateJspHeader(rentalSystem);
    _builder.append(_generateJspHeader, "");
    _builder.newLineIfNotEmpty();
    _builder.append("<h1>");
    String _name = deal.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "");
    _builder.append(" States</h1>");
    _builder.newLineIfNotEmpty();
    _builder.append("<table class=\"table table-striped\">");
    _builder.newLine();
    _builder.append("\t\t");
    int i = 0;
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("<thead>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<td>No.</td>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<td>Name</td>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</thead>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<tbody>");
    _builder.newLine();
    {
      RentalWorkflow _rentalWorkflow = deal.getRentalWorkflow();
      EList<State> _states = _rentalWorkflow.getStates();
      for(final State state : _states) {
        _builder.append("\t\t");
        _builder.append("<tr>");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("<td>");
        _builder.append(i, "\t\t\t");
        _builder.append("</td>");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("<td><a href=\"");
        String _name_1 = deal.getName();
        String _firstLower = StringExtensions.toFirstLower(_name_1);
        _builder.append(_firstLower, "\t\t\t");
        String _name_2 = state.getName();
        String _firstUpper_1 = StringExtensions.toFirstUpper(_name_2);
        _builder.append(_firstUpper_1, "\t\t\t");
        _builder.append("\">");
        String _name_3 = deal.getName();
        String _firstLower_1 = StringExtensions.toFirstLower(_name_3);
        _builder.append(_firstLower_1, "\t\t\t");
        String _name_4 = state.getName();
        String _firstUpper_2 = StringExtensions.toFirstUpper(_name_4);
        _builder.append(_firstUpper_2, "\t\t\t");
        _builder.append("</a></td>");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("</tr>");
        _builder.newLine();
        _builder.append("\t\t");
        int _plusPlus = i++;
        _builder.append(_plusPlus, "\t\t");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t\t");
    _builder.append("</tbody>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</table>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<a href=\"/\" class=\"btn btn-primary\">Index</a>");
    _builder.newLine();
    CharSequence _generateJspFooter = this.generateJspFooter(rentalSystem);
    _builder.append(_generateJspFooter, "");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateDealsIndexJsp(final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateJspHeader = this.generateJspHeader(rentalSystem);
    _builder.append(_generateJspHeader, "");
    _builder.newLineIfNotEmpty();
    _builder.append("<h1>Deals</h1>");
    _builder.newLine();
    _builder.append("<table class=\"table table-striped\">");
    _builder.newLine();
    _builder.append("\t\t");
    int i = 0;
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("<thead>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<td>No.</td>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<td>Name</td>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</thead>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<tbody>");
    _builder.newLine();
    {
      EList<Deal> _deals = rentalSystem.getDeals();
      for(final Deal deal : _deals) {
        _builder.append("\t\t");
        _builder.append("<tr>");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("<td>");
        _builder.append(i, "\t\t\t");
        _builder.append("</td>");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("<td><a href=\"");
        String _name = deal.getName();
        _builder.append(_name, "\t\t\t");
        _builder.append("\">");
        String _name_1 = deal.getName();
        _builder.append(_name_1, "\t\t\t");
        _builder.append("</a></td>");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("</tr>");
        _builder.newLine();
        _builder.append("\t\t");
        int _plusPlus = i++;
        _builder.append(_plusPlus, "\t\t");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t\t");
    _builder.append("</tbody>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</table>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<a href=\"/\" class=\"btn btn-primary\">Index</a>");
    _builder.newLine();
    CharSequence _generateJspFooter = this.generateJspFooter(rentalSystem);
    _builder.append(_generateJspFooter, "");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateCustomerBeans(final Customer customer, final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package de.nordakademie.xtext.hausarbeit.rentalSystem.web;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import javax.persistence.Entity;");
    _builder.newLine();
    _builder.append("import javax.persistence.GeneratedValue;");
    _builder.newLine();
    _builder.append("import javax.persistence.Id;");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Entity");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public class ");
    String _name = customer.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "\t\t");
    _builder.append(" {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Id");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@GeneratedValue");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("private Long id;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    {
      EList<Attribute> _customerAttribute = customer.getCustomerAttribute();
      for(final Attribute attribute : _customerAttribute) {
        _builder.append("\t\t");
        _builder.append("private ");
        OfType _ofType = attribute.getOfType();
        _builder.append(_ofType, "\t\t");
        _builder.append(" ");
        String _name_1 = attribute.getName();
        String _firstLower = StringExtensions.toFirstLower(_name_1);
        _builder.append(_firstLower, "\t\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public Long getId() {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("return id;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    {
      EList<Attribute> _customerAttribute_1 = customer.getCustomerAttribute();
      for(final Attribute attribute_1 : _customerAttribute_1) {
        _builder.append("\t\t");
        _builder.append("public ");
        OfType _ofType_1 = attribute_1.getOfType();
        _builder.append(_ofType_1, "\t\t");
        _builder.append(" get");
        String _name_2 = attribute_1.getName();
        String _firstUpper_1 = StringExtensions.toFirstUpper(_name_2);
        _builder.append(_firstUpper_1, "\t\t");
        _builder.append("(){");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("return ");
        String _name_3 = attribute_1.getName();
        String _firstLower_1 = StringExtensions.toFirstLower(_name_3);
        _builder.append(_firstLower_1, "\t\t\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public void setId(Long id) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.id = id;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    {
      EList<Attribute> _customerAttribute_2 = customer.getCustomerAttribute();
      for(final Attribute attribute_2 : _customerAttribute_2) {
        _builder.append("\t\t");
        _builder.append("public  void set");
        String _name_4 = attribute_2.getName();
        String _firstUpper_2 = StringExtensions.toFirstUpper(_name_4);
        _builder.append(_firstUpper_2, "\t\t");
        _builder.append("(");
        OfType _ofType_2 = attribute_2.getOfType();
        _builder.append(_ofType_2, "\t\t");
        _builder.append(" ");
        String _name_5 = attribute_2.getName();
        String _firstLower_2 = StringExtensions.toFirstLower(_name_5);
        _builder.append(_firstLower_2, "\t\t");
        _builder.append("){");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("this.");
        String _name_6 = attribute_2.getName();
        String _firstLower_3 = StringExtensions.toFirstLower(_name_6);
        _builder.append(_firstLower_3, "\t\t\t");
        _builder.append(" = ");
        String _name_7 = attribute_2.getName();
        String _firstLower_4 = StringExtensions.toFirstLower(_name_7);
        _builder.append(_firstLower_4, "\t\t\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateCustomerRepos(final Customer customer, final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package de.nordakademie.xtext.hausarbeit.rentalSystem.web;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.springframework.data.repository.CrudRepository;");
    _builder.newLine();
    _builder.append("import org.springframework.stereotype.Repository;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Repository");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public interface I");
    String _name = customer.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "\t");
    _builder.append("Repository extends CrudRepository<");
    String _name_1 = customer.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper_1, "\t");
    _builder.append(", Long> {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateCustomerJsp(final Customer customer, final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateJspHeader = this.generateJspHeader(rentalSystem);
    _builder.append(_generateJspHeader, "");
    _builder.newLineIfNotEmpty();
    _builder.append("<h1>");
    String _name = customer.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "");
    _builder.append("</h1>");
    _builder.newLineIfNotEmpty();
    _builder.append("<p>Number of customers: ${customers.size()}</p>");
    _builder.newLine();
    _builder.append("<table class=\"table table-striped\">");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<thead>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<td>No.</td>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<td>ID</td>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</thead>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<tbody>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<c:forEach var=\"i\" items=\"${customers}\">");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<td></td>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<td>${i.id}</td>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</c:forEach>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</tbody>");
    _builder.newLine();
    _builder.append("</table>");
    _builder.newLine();
    _builder.append("<a href=\"");
    String _name_1 = customer.getName();
    String _firstLower = StringExtensions.toFirstLower(_name_1);
    _builder.append(_firstLower, "");
    _builder.append("Form\" class=\"btn btn-primary\">New ");
    String _name_2 = customer.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_2);
    _builder.append(_firstUpper_1, "");
    _builder.append("</a>");
    _builder.newLineIfNotEmpty();
    _builder.append("<a href=\"customersIndex\" class=\"btn btn-primary\">Customers</a>");
    _builder.newLine();
    CharSequence _generateJspFooter = this.generateJspFooter(rentalSystem);
    _builder.append(_generateJspFooter, "");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence generateCustomerFormJsp(final Customer customer, final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateJspHeader = this.generateJspHeader(rentalSystem);
    _builder.append(_generateJspHeader, "");
    _builder.newLineIfNotEmpty();
    _builder.append("<h1>");
    String _name = customer.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "");
    _builder.append("Form</h1>");
    _builder.newLineIfNotEmpty();
    _builder.append("<form id=\"customer-form\" role=\"form\" th:action=\"@{/");
    String _name_1 = customer.getName();
    String _firstLower = StringExtensions.toFirstLower(_name_1);
    _builder.append(_firstLower, "");
    _builder.append("Form}\" method=\"post\" th:object=\"${");
    String _name_2 = customer.getName();
    String _firstLower_1 = StringExtensions.toFirstLower(_name_2);
    _builder.append(_firstLower_1, "");
    _builder.append("}\">");
    _builder.newLineIfNotEmpty();
    _builder.append("<table>");
    _builder.newLine();
    {
      EList<Attribute> _customerAttribute = customer.getCustomerAttribute();
      for(final Attribute attribute : _customerAttribute) {
        _builder.append("<tr>");
        _builder.newLine();
        _builder.append("<td><label for=\"");
        String _name_3 = attribute.getName();
        String _firstLower_2 = StringExtensions.toFirstLower(_name_3);
        _builder.append(_firstLower_2, "");
        _builder.append("\">");
        String _name_4 = attribute.getName();
        String _firstUpper_1 = StringExtensions.toFirstUpper(_name_4);
        _builder.append(_firstUpper_1, "");
        _builder.append("</label></td>");
        _builder.newLineIfNotEmpty();
        _builder.append("<td>");
        CharSequence _buildInput = this.buildInput(attribute);
        _builder.append(_buildInput, "");
        _builder.append(" id=\"");
        String _name_5 = attribute.getName();
        String _firstLower_3 = StringExtensions.toFirstLower(_name_5);
        _builder.append(_firstLower_3, "");
        _builder.append("\" name=\"");
        String _name_6 = attribute.getName();
        String _firstLower_4 = StringExtensions.toFirstLower(_name_6);
        _builder.append(_firstLower_4, "");
        _builder.append("\" th:field=\"${");
        String _name_7 = customer.getName();
        String _firstLower_5 = StringExtensions.toFirstLower(_name_7);
        _builder.append(_firstLower_5, "");
        _builder.append(".");
        String _name_8 = attribute.getName();
        String _firstLower_6 = StringExtensions.toFirstLower(_name_8);
        _builder.append(_firstLower_6, "");
        _builder.append("}\" /></td>");
        _builder.newLineIfNotEmpty();
        _builder.append("</tr>");
        _builder.newLine();
      }
    }
    _builder.append("</table>");
    _builder.newLine();
    _builder.append("<button type=\"submit\">Save</button>");
    _builder.newLine();
    _builder.append("</form>");
    _builder.newLine();
    CharSequence _generateJspFooter = this.generateJspFooter(rentalSystem);
    _builder.append(_generateJspFooter, "");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence generateRentalTypeFormJsp(final RentalType rentalType, final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateJspHeader = this.generateJspHeader(rentalSystem);
    _builder.append(_generateJspHeader, "");
    _builder.newLineIfNotEmpty();
    _builder.append("<h1>");
    String _name = rentalType.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "");
    _builder.append("Form</h1>");
    _builder.newLineIfNotEmpty();
    _builder.append("<form id=\"rentalType-form\" role=\"form\" th:action=\"@{/");
    String _name_1 = rentalType.getName();
    String _firstLower = StringExtensions.toFirstLower(_name_1);
    _builder.append(_firstLower, "");
    _builder.append("Form}\" method=\"post\" th:object=\"${");
    String _name_2 = rentalType.getName();
    String _firstLower_1 = StringExtensions.toFirstLower(_name_2);
    _builder.append(_firstLower_1, "");
    _builder.append("}\">");
    _builder.newLineIfNotEmpty();
    _builder.append("<table>");
    _builder.newLine();
    {
      EList<Attribute> _typeAttributes = rentalType.getTypeAttributes();
      for(final Attribute attribute : _typeAttributes) {
        _builder.append("<tr>");
        _builder.newLine();
        _builder.append("<td><label for=\"");
        String _name_3 = attribute.getName();
        String _firstLower_2 = StringExtensions.toFirstLower(_name_3);
        _builder.append(_firstLower_2, "");
        _builder.append("\">");
        String _name_4 = attribute.getName();
        String _firstUpper_1 = StringExtensions.toFirstUpper(_name_4);
        _builder.append(_firstUpper_1, "");
        _builder.append("</label></td>");
        _builder.newLineIfNotEmpty();
        _builder.append("<td>");
        CharSequence _buildInput = this.buildInput(attribute);
        _builder.append(_buildInput, "");
        _builder.append(" id=\"");
        String _name_5 = attribute.getName();
        String _firstLower_3 = StringExtensions.toFirstLower(_name_5);
        _builder.append(_firstLower_3, "");
        _builder.append("\" name=\"");
        String _name_6 = attribute.getName();
        String _firstLower_4 = StringExtensions.toFirstLower(_name_6);
        _builder.append(_firstLower_4, "");
        _builder.append("\" th:field=\"${");
        String _name_7 = rentalType.getName();
        String _firstLower_5 = StringExtensions.toFirstLower(_name_7);
        _builder.append(_firstLower_5, "");
        _builder.append(".");
        String _name_8 = attribute.getName();
        String _firstLower_6 = StringExtensions.toFirstLower(_name_8);
        _builder.append(_firstLower_6, "");
        _builder.append("}\" /></td>");
        _builder.newLineIfNotEmpty();
        _builder.append("</tr>");
        _builder.newLine();
      }
    }
    _builder.append("</table>");
    _builder.newLine();
    _builder.append("<button type=\"submit\">Save</button>");
    _builder.newLine();
    _builder.append("</form>");
    _builder.newLine();
    CharSequence _generateJspFooter = this.generateJspFooter(rentalSystem);
    _builder.append(_generateJspFooter, "");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence buildInput(final Attribute attribute) {
    CharSequence _switchResult = null;
    boolean _matched = false;
    if (!_matched) {
      OfType _ofType = attribute.getOfType();
      boolean _equals = _ofType.equals(OfType.STRING);
      if (_equals) {
        _matched=true;
        StringConcatenation _builder = new StringConcatenation();
        _builder.append("<input type=\"text\" value=\"example text\"");
        _switchResult = _builder;
      }
    }
    if (!_matched) {
      OfType _ofType_1 = attribute.getOfType();
      boolean _equals_1 = _ofType_1.equals(OfType.INT);
      if (_equals_1) {
        _matched=true;
        StringConcatenation _builder_1 = new StringConcatenation();
        _builder_1.append("<input type=\"number\" step=\"1\" value=\"1\"");
        _switchResult = _builder_1;
      }
    }
    if (!_matched) {
      OfType _ofType_2 = attribute.getOfType();
      boolean _equals_2 = _ofType_2.equals(OfType.BOOLEAN);
      if (_equals_2) {
        _matched=true;
        StringConcatenation _builder_2 = new StringConcatenation();
        _builder_2.append("<input type=\"checkbox\"");
        _switchResult = _builder_2;
      }
    }
    if (!_matched) {
      OfType _ofType_3 = attribute.getOfType();
      boolean _equals_3 = _ofType_3.equals(OfType.DOUBLE);
      if (_equals_3) {
        _matched=true;
        StringConcatenation _builder_3 = new StringConcatenation();
        _builder_3.append("<input type=\"number\" step=\"0.01\" value=\"0.01\"");
        _switchResult = _builder_3;
      }
    }
    if (!_matched) {
      StringConcatenation _builder_4 = new StringConcatenation();
      _builder_4.append("<input type=\"text\"");
      _switchResult = _builder_4;
    }
    return _switchResult;
  }
  
  public CharSequence generateRentalTypeJsp(final RentalType rentalType, final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateJspHeader = this.generateJspHeader(rentalSystem);
    _builder.append(_generateJspHeader, "");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("<h1>");
    String _name = rentalType.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "\t\t");
    _builder.append("</h1>");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("<p>Number of rental types: ${rentalTypes.size()}</p>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<table class=\"table table-striped\">");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<thead>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<td>No.</td>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<td>ID</td>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</thead>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<tbody>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<c:forEach var=\"i\" items=\"${rentalTypes}\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("<td></td>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("<td>${i.id}</td>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</c:forEach>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</tbody>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</table>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<a href=\"");
    String _name_1 = rentalType.getName();
    String _firstLower = StringExtensions.toFirstLower(_name_1);
    _builder.append(_firstLower, "\t\t");
    _builder.append("Form\" class=\"btn btn-primary\">New ");
    String _name_2 = rentalType.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_2);
    _builder.append(_firstUpper_1, "\t\t");
    _builder.append("</a>");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("<a href=\"rentalTypesIndex\" class=\"btn btn-primary\">Rental-Types</a>");
    _builder.newLine();
    CharSequence _generateJspFooter = this.generateJspFooter(rentalSystem);
    _builder.append(_generateJspFooter, "");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence generateDealJsp(final Deal deal, final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateJspHeader = this.generateJspHeader(rentalSystem);
    _builder.append(_generateJspHeader, "");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<h1>");
    String _name = deal.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "\t\t");
    _builder.append("</h1>");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("<p>Number of deals types: ${deals.size()}</p>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<table class=\"table table-striped\">");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<thead>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<td>No.</td>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<td>ID</td>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</thead>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<tbody>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<c:forEach var=\"i\" items=\"${deals}\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("<td></td>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.append("<td>${i.id}</td>");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</c:forEach>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</tbody>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</table>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<a href=\"");
    String _name_1 = deal.getName();
    String _firstLower = StringExtensions.toFirstLower(_name_1);
    _builder.append(_firstLower, "\t\t");
    _builder.append("Form\" class=\"btn btn-primary\">New ");
    String _name_2 = deal.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_2);
    _builder.append(_firstUpper_1, "\t\t");
    _builder.append("</a><br />");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("<a href=\"dealsIndex\" class=\"btn btn-primary\">Deals Index</a><br />");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<a href=\"");
    String _name_3 = deal.getName();
    String _firstLower_1 = StringExtensions.toFirstLower(_name_3);
    _builder.append(_firstLower_1, "\t\t");
    _builder.append("StatesIndex\" class=\"btn btn-primary\">");
    String _name_4 = deal.getName();
    String _firstUpper_2 = StringExtensions.toFirstUpper(_name_4);
    _builder.append(_firstUpper_2, "\t\t");
    _builder.append(" States Index</a><br />");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("<a href=\"");
    String _name_5 = deal.getName();
    String _firstLower_2 = StringExtensions.toFirstLower(_name_5);
    _builder.append(_firstLower_2, "\t\t");
    RentalWorkflow _rentalWorkflow = deal.getRentalWorkflow();
    EList<State> _startState = _rentalWorkflow.getStartState();
    State _head = IterableExtensions.<State>head(_startState);
    String _name_6 = _head.getName();
    String _firstUpper_3 = StringExtensions.toFirstUpper(_name_6);
    _builder.append(_firstUpper_3, "\t\t");
    _builder.append("\" class=\"btn btn-primary\">Begin Workflow</a>");
    _builder.newLineIfNotEmpty();
    CharSequence _generateJspFooter = this.generateJspFooter(rentalSystem);
    _builder.append(_generateJspFooter, "");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence generateDealStateJsp(final Deal deal, final RentalSystem rentalSystem, final State state) {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateJspHeader = this.generateJspHeader(rentalSystem);
    _builder.append(_generateJspHeader, "");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("<h1>");
    String _name = deal.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "\t\t");
    String _name_1 = state.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper_1, "\t\t");
    _builder.append("</h1>");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    CharSequence _buildButtonFlowSwitch = this.buildButtonFlowSwitch(state, deal);
    _builder.append(_buildButtonFlowSwitch, "\t\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("<a href=\"dealsIndex\" class=\"btn btn-primary\">Deals</a>");
    _builder.newLine();
    CharSequence _generateJspFooter = this.generateJspFooter(rentalSystem);
    _builder.append(_generateJspFooter, "");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence buildButtonFlowSwitch(final State state, final Deal deal) {
    CharSequence _switchResult = null;
    boolean _matched = false;
    if (!_matched) {
      RentalWorkflow _rentalWorkflow = deal.getRentalWorkflow();
      EList<State> _finishState = _rentalWorkflow.getFinishState();
      State _head = IterableExtensions.<State>head(_finishState);
      String _name = _head.getName();
      EList<State> _transition = state.getTransition();
      State _head_1 = IterableExtensions.<State>head(_transition);
      String _name_1 = _head_1.getName();
      boolean _equals = _name.equals(_name_1);
      if (_equals) {
        _matched=true;
        StringConcatenation _builder = new StringConcatenation();
        _builder.append("<a href=\"");
        String _name_2 = deal.getName();
        String _firstLower = StringExtensions.toFirstLower(_name_2);
        _builder.append(_firstLower, "");
        EList<State> _transition_1 = state.getTransition();
        State _head_2 = IterableExtensions.<State>head(_transition_1);
        String _name_3 = _head_2.getName();
        String _firstUpper = StringExtensions.toFirstUpper(_name_3);
        _builder.append(_firstUpper, "");
        _builder.append("\" class=\"btn btn-primary\">Last State</a>");
        _switchResult = _builder;
      }
    }
    if (!_matched) {
      RentalWorkflow _rentalWorkflow_1 = deal.getRentalWorkflow();
      EList<State> _finishState_1 = _rentalWorkflow_1.getFinishState();
      State _head_3 = IterableExtensions.<State>head(_finishState_1);
      String _name_4 = _head_3.getName();
      String _name_5 = state.getName();
      boolean _equals_1 = _name_4.equals(_name_5);
      if (_equals_1) {
        _matched=true;
        StringConcatenation _builder_1 = new StringConcatenation();
        _builder_1.append("<a href=\"");
        String _name_6 = deal.getName();
        String _firstLower_1 = StringExtensions.toFirstLower(_name_6);
        _builder_1.append(_firstLower_1, "");
        _builder_1.append("\" class=\"btn btn-primary\">Finish!</a>");
        _switchResult = _builder_1;
      }
    }
    if (!_matched) {
      StringConcatenation _builder_2 = new StringConcatenation();
      _builder_2.append("<a href=\"");
      String _name_7 = deal.getName();
      String _firstLower_2 = StringExtensions.toFirstLower(_name_7);
      _builder_2.append(_firstLower_2, "");
      EList<State> _transition_2 = state.getTransition();
      State _head_4 = IterableExtensions.<State>head(_transition_2);
      String _name_8 = _head_4.getName();
      String _firstUpper_1 = StringExtensions.toFirstUpper(_name_8);
      _builder_2.append(_firstUpper_1, "");
      _builder_2.append("\" class=\"btn btn-primary\">Next State</a>");
      _switchResult = _builder_2;
    }
    return _switchResult;
  }
  
  public CharSequence generateDealFormJsp(final Deal deal, final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateJspHeader = this.generateJspHeader(rentalSystem);
    _builder.append(_generateJspHeader, "");
    _builder.newLineIfNotEmpty();
    _builder.append("<h1>Deals</h1>");
    _builder.newLine();
    _builder.append("<form id=\"customer-form\" role=\"form\" th:action=\"@{/");
    String _name = deal.getName();
    String _firstLower = StringExtensions.toFirstLower(_name);
    _builder.append(_firstLower, "");
    _builder.append("Form}\" method=\"post\" th:object=\"${");
    String _name_1 = deal.getName();
    String _firstLower_1 = StringExtensions.toFirstLower(_name_1);
    _builder.append(_firstLower_1, "");
    _builder.append("}\">");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("<table>");
    _builder.newLine();
    {
      EList<Attribute> _dealAttributes = deal.getDealAttributes();
      for(final Attribute attribute : _dealAttributes) {
        _builder.append("\t\t");
        _builder.append("<tr>");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("<td><label for=\"");
        String _name_2 = attribute.getName();
        String _firstLower_2 = StringExtensions.toFirstLower(_name_2);
        _builder.append(_firstLower_2, "\t\t");
        _builder.append("\">");
        String _name_3 = attribute.getName();
        String _firstUpper = StringExtensions.toFirstUpper(_name_3);
        _builder.append(_firstUpper, "\t\t");
        _builder.append("</label></td>");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("<td>");
        CharSequence _buildInput = this.buildInput(attribute);
        _builder.append(_buildInput, "\t\t");
        _builder.append(" id=\"");
        String _name_4 = attribute.getName();
        String _firstLower_3 = StringExtensions.toFirstLower(_name_4);
        _builder.append(_firstLower_3, "\t\t");
        _builder.append("\" name=\"");
        String _name_5 = attribute.getName();
        String _firstLower_4 = StringExtensions.toFirstLower(_name_5);
        _builder.append(_firstLower_4, "\t\t");
        _builder.append("\" th:field=\"${");
        String _name_6 = deal.getName();
        String _firstLower_5 = StringExtensions.toFirstLower(_name_6);
        _builder.append(_firstLower_5, "\t\t");
        _builder.append(".");
        String _name_7 = attribute.getName();
        String _firstLower_6 = StringExtensions.toFirstLower(_name_7);
        _builder.append(_firstLower_6, "\t\t");
        _builder.append("}\" /></td>");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("</tr>");
        _builder.newLine();
      }
    }
    _builder.append("\t\t");
    _builder.append("</table>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<p>Please select the id of one of the following customers:</p><br />");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<select name=\"selectionCustomerId\">");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<c:forEach var=\"i\" items=\"${customers}\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<option value=\"${i.id}\">${i.id}</option>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</c:forEach>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</select>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<p>Please select the id of one of the following rentalTypes:</p><br />");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<select name=\"selectionTypeId\">");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<c:forEach var=\"j\" items=\"${customers}\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<option value=\"${j.id}\">${j.id}</option>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</c:forEach>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</select>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<button type=\"submit\">Save</button>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</form>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<a href=\"");
    String _name_8 = deal.getName();
    String _firstLower_7 = StringExtensions.toFirstLower(_name_8);
    _builder.append(_firstLower_7, "\t\t");
    _builder.append("\" class=\"btn btn-primary\">Back</a>");
    _builder.newLineIfNotEmpty();
    CharSequence _generateJspFooter = this.generateJspFooter(rentalSystem);
    _builder.append(_generateJspFooter, "");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence generateDealStateFormJsp(final Deal deal, final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _generateJspHeader = this.generateJspHeader(rentalSystem);
    _builder.append(_generateJspHeader, "");
    _builder.newLineIfNotEmpty();
    _builder.append("<h1>Deals</h1>");
    _builder.newLine();
    _builder.append("<form id=\"customer-form\" role=\"form\" th:action=\"@{/");
    String _name = deal.getName();
    String _firstLower = StringExtensions.toFirstLower(_name);
    _builder.append(_firstLower, "");
    _builder.append("Form}\" method=\"post\" th:object=\"${");
    String _name_1 = deal.getName();
    String _firstLower_1 = StringExtensions.toFirstLower(_name_1);
    _builder.append(_firstLower_1, "");
    _builder.append("}\">");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("<table>");
    _builder.newLine();
    {
      EList<Attribute> _dealAttributes = deal.getDealAttributes();
      for(final Attribute attribute : _dealAttributes) {
        _builder.append("\t\t");
        _builder.append("<tr>");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("<td><label for=\"");
        String _name_2 = attribute.getName();
        String _firstLower_2 = StringExtensions.toFirstLower(_name_2);
        _builder.append(_firstLower_2, "\t\t");
        _builder.append("\">");
        String _name_3 = attribute.getName();
        String _firstUpper = StringExtensions.toFirstUpper(_name_3);
        _builder.append(_firstUpper, "\t\t");
        _builder.append("</label></td>");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("<td>");
        CharSequence _buildInput = this.buildInput(attribute);
        _builder.append(_buildInput, "\t\t");
        _builder.append(" id=\"");
        String _name_4 = attribute.getName();
        String _firstLower_3 = StringExtensions.toFirstLower(_name_4);
        _builder.append(_firstLower_3, "\t\t");
        _builder.append("\" name=\"");
        String _name_5 = attribute.getName();
        String _firstLower_4 = StringExtensions.toFirstLower(_name_5);
        _builder.append(_firstLower_4, "\t\t");
        _builder.append("\" th:field=\"${");
        String _name_6 = deal.getName();
        String _firstLower_5 = StringExtensions.toFirstLower(_name_6);
        _builder.append(_firstLower_5, "\t\t");
        _builder.append(".");
        String _name_7 = attribute.getName();
        String _firstLower_6 = StringExtensions.toFirstLower(_name_7);
        _builder.append(_firstLower_6, "\t\t");
        _builder.append("}\" /></td>");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("</tr>");
        _builder.newLine();
      }
    }
    _builder.append("\t\t");
    _builder.append("</table>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<p>Please select the id of one of the following customers:</p><br />");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<select name=\"selectionCustomerId\">");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<c:forEach var=\"i\" items=\"${customers}\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<option value=\"${i.id}\">${i.id}</option>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</c:forEach>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</select>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<p>Please select the id of one of the following rentalTypes:</p><br />");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<select name=\"selectionTypeId\">");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("<c:forEach var=\"j\" items=\"${customers}\">");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("<option value=\"${j.id}\">${j.id}</option>");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("</c:forEach>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</select>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<button type=\"submit\">Save</button>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</form>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<a href=\"");
    String _name_8 = deal.getName();
    String _firstLower_7 = StringExtensions.toFirstLower(_name_8);
    _builder.append(_firstLower_7, "\t\t");
    _builder.append("\" class=\"btn btn-primary\">Back</a>");
    _builder.newLineIfNotEmpty();
    CharSequence _generateJspFooter = this.generateJspFooter(rentalSystem);
    _builder.append(_generateJspFooter, "");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence generateRentalTypeBeans(final RentalType rentalType, final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package de.nordakademie.xtext.hausarbeit.rentalSystem.web;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import javax.persistence.Entity;");
    _builder.newLine();
    _builder.append("import javax.persistence.GeneratedValue;");
    _builder.newLine();
    _builder.append("import javax.persistence.Id;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Entity");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public class ");
    String _name = rentalType.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "\t\t");
    _builder.append(" {");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Id");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@GeneratedValue");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("private Long id;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    {
      EList<Attribute> _typeAttributes = rentalType.getTypeAttributes();
      for(final Attribute attribute : _typeAttributes) {
        _builder.append("\t\t");
        _builder.append("private ");
        OfType _ofType = attribute.getOfType();
        _builder.append(_ofType, "\t\t");
        _builder.append(" ");
        String _name_1 = attribute.getName();
        String _firstLower = StringExtensions.toFirstLower(_name_1);
        _builder.append(_firstLower, "\t\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public Long getId() {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("return id;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    {
      EList<Attribute> _typeAttributes_1 = rentalType.getTypeAttributes();
      for(final Attribute attribute_1 : _typeAttributes_1) {
        _builder.append("\t\t");
        _builder.append("public ");
        OfType _ofType_1 = attribute_1.getOfType();
        _builder.append(_ofType_1, "\t\t");
        _builder.append(" get");
        String _name_2 = attribute_1.getName();
        String _firstUpper_1 = StringExtensions.toFirstUpper(_name_2);
        _builder.append(_firstUpper_1, "\t\t");
        _builder.append("(){");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("return ");
        String _name_3 = attribute_1.getName();
        String _firstLower_1 = StringExtensions.toFirstLower(_name_3);
        _builder.append(_firstLower_1, "\t\t\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public void setId(Long id) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.id = id;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    {
      EList<Attribute> _typeAttributes_2 = rentalType.getTypeAttributes();
      for(final Attribute attribute_2 : _typeAttributes_2) {
        _builder.append("\t\t");
        _builder.append("public  void set");
        String _name_4 = attribute_2.getName();
        String _firstUpper_2 = StringExtensions.toFirstUpper(_name_4);
        _builder.append(_firstUpper_2, "\t\t");
        _builder.append("(");
        OfType _ofType_2 = attribute_2.getOfType();
        _builder.append(_ofType_2, "\t\t");
        _builder.append(" ");
        String _name_5 = attribute_2.getName();
        String _firstLower_2 = StringExtensions.toFirstLower(_name_5);
        _builder.append(_firstLower_2, "\t\t");
        _builder.append("){");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("this.");
        String _name_6 = attribute_2.getName();
        String _firstLower_3 = StringExtensions.toFirstLower(_name_6);
        _builder.append(_firstLower_3, "\t\t\t");
        _builder.append(" = ");
        String _name_7 = attribute_2.getName();
        String _firstLower_4 = StringExtensions.toFirstLower(_name_7);
        _builder.append(_firstLower_4, "\t\t\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateRentalTypeRepos(final RentalType rentalType, final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package de.nordakademie.xtext.hausarbeit.rentalSystem.web;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.springframework.data.repository.CrudRepository;");
    _builder.newLine();
    _builder.append("import org.springframework.stereotype.Repository;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Repository");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public interface I");
    String _name = rentalType.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "\t\t");
    _builder.append("Repository extends CrudRepository<");
    String _name_1 = rentalType.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper_1, "\t\t");
    _builder.append(", Long> {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateDealBeans(final Deal deal, final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package de.nordakademie.xtext.hausarbeit.rentalSystem.web;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import javax.persistence.Entity;");
    _builder.newLine();
    _builder.append("import javax.persistence.GeneratedValue;");
    _builder.newLine();
    _builder.append("import javax.persistence.Id;");
    _builder.newLine();
    _builder.append("import javax.persistence.OneToOne;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Entity");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public class ");
    String _name = deal.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "\t\t");
    _builder.append(" {");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Id");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@GeneratedValue");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("private Long id;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@OneToOne");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("private ");
    Customer _customer = deal.getCustomer();
    String _name_1 = _customer.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper_1, "\t\t");
    _builder.append(" ");
    Customer _customer_1 = deal.getCustomer();
    String _name_2 = _customer_1.getName();
    String _firstLower = StringExtensions.toFirstLower(_name_2);
    _builder.append(_firstLower, "\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@OneToOne");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("private ");
    RentalType _rentalType = deal.getRentalType();
    String _name_3 = _rentalType.getName();
    String _firstUpper_2 = StringExtensions.toFirstUpper(_name_3);
    _builder.append(_firstUpper_2, "\t\t");
    _builder.append(" ");
    RentalType _rentalType_1 = deal.getRentalType();
    String _name_4 = _rentalType_1.getName();
    String _firstLower_1 = StringExtensions.toFirstLower(_name_4);
    _builder.append(_firstLower_1, "\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    {
      EList<Attribute> _dealAttributes = deal.getDealAttributes();
      for(final Attribute attribute : _dealAttributes) {
        _builder.append("\t\t");
        _builder.append("private ");
        OfType _ofType = attribute.getOfType();
        _builder.append(_ofType, "\t\t");
        _builder.append(" ");
        String _name_5 = attribute.getName();
        String _firstLower_2 = StringExtensions.toFirstLower(_name_5);
        _builder.append(_firstLower_2, "\t\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public Long getId() {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("return id;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public ");
    Customer _customer_2 = deal.getCustomer();
    String _name_6 = _customer_2.getName();
    String _firstUpper_3 = StringExtensions.toFirstUpper(_name_6);
    _builder.append(_firstUpper_3, "\t\t");
    _builder.append(" get");
    Customer _customer_3 = deal.getCustomer();
    String _name_7 = _customer_3.getName();
    String _firstUpper_4 = StringExtensions.toFirstUpper(_name_7);
    _builder.append(_firstUpper_4, "\t\t");
    _builder.append("(){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    _builder.append("return ");
    Customer _customer_4 = deal.getCustomer();
    String _name_8 = _customer_4.getName();
    String _firstLower_3 = StringExtensions.toFirstLower(_name_8);
    _builder.append(_firstLower_3, "\t\t\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public ");
    RentalType _rentalType_2 = deal.getRentalType();
    String _name_9 = _rentalType_2.getName();
    String _firstUpper_5 = StringExtensions.toFirstUpper(_name_9);
    _builder.append(_firstUpper_5, "\t\t");
    _builder.append(" get");
    RentalType _rentalType_3 = deal.getRentalType();
    String _name_10 = _rentalType_3.getName();
    String _firstUpper_6 = StringExtensions.toFirstUpper(_name_10);
    _builder.append(_firstUpper_6, "\t\t");
    _builder.append("(){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    _builder.append("return ");
    RentalType _rentalType_4 = deal.getRentalType();
    String _name_11 = _rentalType_4.getName();
    String _firstLower_4 = StringExtensions.toFirstLower(_name_11);
    _builder.append(_firstLower_4, "\t\t\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    {
      EList<Attribute> _dealAttributes_1 = deal.getDealAttributes();
      for(final Attribute attribute_1 : _dealAttributes_1) {
        _builder.append("\t\t");
        _builder.append("public ");
        OfType _ofType_1 = attribute_1.getOfType();
        _builder.append(_ofType_1, "\t\t");
        _builder.append(" get");
        String _name_12 = attribute_1.getName();
        String _firstUpper_7 = StringExtensions.toFirstUpper(_name_12);
        _builder.append(_firstUpper_7, "\t\t");
        _builder.append("(){");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("return ");
        String _name_13 = attribute_1.getName();
        String _firstLower_5 = StringExtensions.toFirstLower(_name_13);
        _builder.append(_firstLower_5, "\t\t\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public void setId(Long id) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.id = id;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public void set");
    Customer _customer_5 = deal.getCustomer();
    String _name_14 = _customer_5.getName();
    String _firstUpper_8 = StringExtensions.toFirstUpper(_name_14);
    _builder.append(_firstUpper_8, "\t\t");
    _builder.append("(");
    Customer _customer_6 = deal.getCustomer();
    String _name_15 = _customer_6.getName();
    String _firstUpper_9 = StringExtensions.toFirstUpper(_name_15);
    _builder.append(_firstUpper_9, "\t\t");
    _builder.append(" ");
    Customer _customer_7 = deal.getCustomer();
    String _name_16 = _customer_7.getName();
    String _firstLower_6 = StringExtensions.toFirstLower(_name_16);
    _builder.append(_firstLower_6, "\t\t");
    _builder.append("){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    _builder.append("this.");
    Customer _customer_8 = deal.getCustomer();
    String _name_17 = _customer_8.getName();
    String _firstLower_7 = StringExtensions.toFirstLower(_name_17);
    _builder.append(_firstLower_7, "\t\t\t\t");
    _builder.append(" = ");
    Customer _customer_9 = deal.getCustomer();
    String _name_18 = _customer_9.getName();
    String _firstLower_8 = StringExtensions.toFirstLower(_name_18);
    _builder.append(_firstLower_8, "\t\t\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public void set");
    RentalType _rentalType_5 = deal.getRentalType();
    String _name_19 = _rentalType_5.getName();
    String _firstUpper_10 = StringExtensions.toFirstUpper(_name_19);
    _builder.append(_firstUpper_10, "\t\t");
    _builder.append("(");
    RentalType _rentalType_6 = deal.getRentalType();
    String _name_20 = _rentalType_6.getName();
    String _firstUpper_11 = StringExtensions.toFirstUpper(_name_20);
    _builder.append(_firstUpper_11, "\t\t");
    _builder.append(" ");
    RentalType _rentalType_7 = deal.getRentalType();
    String _name_21 = _rentalType_7.getName();
    String _firstLower_9 = StringExtensions.toFirstLower(_name_21);
    _builder.append(_firstLower_9, "\t\t");
    _builder.append("){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    _builder.append("this.");
    RentalType _rentalType_8 = deal.getRentalType();
    String _name_22 = _rentalType_8.getName();
    String _firstLower_10 = StringExtensions.toFirstLower(_name_22);
    _builder.append(_firstLower_10, "\t\t\t\t");
    _builder.append(" = ");
    RentalType _rentalType_9 = deal.getRentalType();
    String _name_23 = _rentalType_9.getName();
    String _firstLower_11 = StringExtensions.toFirstLower(_name_23);
    _builder.append(_firstLower_11, "\t\t\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    {
      EList<Attribute> _dealAttributes_2 = deal.getDealAttributes();
      for(final Attribute attribute_2 : _dealAttributes_2) {
        _builder.append("\t\t");
        _builder.append("public  void set");
        String _name_24 = attribute_2.getName();
        String _firstUpper_12 = StringExtensions.toFirstUpper(_name_24);
        _builder.append(_firstUpper_12, "\t\t");
        _builder.append("(");
        OfType _ofType_2 = attribute_2.getOfType();
        _builder.append(_ofType_2, "\t\t");
        _builder.append(" ");
        String _name_25 = attribute_2.getName();
        String _firstLower_12 = StringExtensions.toFirstLower(_name_25);
        _builder.append(_firstLower_12, "\t\t");
        _builder.append("){");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("this.");
        String _name_26 = attribute_2.getName();
        String _firstLower_13 = StringExtensions.toFirstLower(_name_26);
        _builder.append(_firstLower_13, "\t\t\t");
        _builder.append(" = ");
        String _name_27 = attribute_2.getName();
        String _firstLower_14 = StringExtensions.toFirstLower(_name_27);
        _builder.append(_firstLower_14, "\t\t\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateDealStateBeans(final Deal deal, final RentalSystem rentalSystem, final State state) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package de.nordakademie.xtext.hausarbeit.rentalSystem.web;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import javax.persistence.Entity;");
    _builder.newLine();
    _builder.append("import javax.persistence.GeneratedValue;");
    _builder.newLine();
    _builder.append("import javax.persistence.Id;");
    _builder.newLine();
    _builder.append("import javax.persistence.OneToOne;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Entity");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public class ");
    String _name = deal.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "\t\t");
    String _name_1 = state.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper_1, "\t\t");
    _builder.append(" {");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Id");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@GeneratedValue");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("private Long id;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@OneToOne");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("private ");
    Customer _customer = deal.getCustomer();
    String _name_2 = _customer.getName();
    String _firstUpper_2 = StringExtensions.toFirstUpper(_name_2);
    _builder.append(_firstUpper_2, "\t\t");
    _builder.append(" ");
    Customer _customer_1 = deal.getCustomer();
    String _name_3 = _customer_1.getName();
    String _firstLower = StringExtensions.toFirstLower(_name_3);
    _builder.append(_firstLower, "\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@OneToOne");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("private ");
    RentalType _rentalType = deal.getRentalType();
    String _name_4 = _rentalType.getName();
    String _firstUpper_3 = StringExtensions.toFirstUpper(_name_4);
    _builder.append(_firstUpper_3, "\t\t");
    _builder.append(" ");
    RentalType _rentalType_1 = deal.getRentalType();
    String _name_5 = _rentalType_1.getName();
    String _firstLower_1 = StringExtensions.toFirstLower(_name_5);
    _builder.append(_firstLower_1, "\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    {
      EList<Attribute> _dealAttributes = deal.getDealAttributes();
      for(final Attribute attribute : _dealAttributes) {
        _builder.append("\t\t");
        _builder.append("private ");
        OfType _ofType = attribute.getOfType();
        _builder.append(_ofType, "\t\t");
        _builder.append(" ");
        String _name_6 = attribute.getName();
        String _firstLower_2 = StringExtensions.toFirstLower(_name_6);
        _builder.append(_firstLower_2, "\t\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public Long getId() {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("return id;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public ");
    Customer _customer_2 = deal.getCustomer();
    String _name_7 = _customer_2.getName();
    String _firstUpper_4 = StringExtensions.toFirstUpper(_name_7);
    _builder.append(_firstUpper_4, "\t\t");
    _builder.append(" get");
    Customer _customer_3 = deal.getCustomer();
    String _name_8 = _customer_3.getName();
    String _firstUpper_5 = StringExtensions.toFirstUpper(_name_8);
    _builder.append(_firstUpper_5, "\t\t");
    _builder.append("(){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    _builder.append("return ");
    Customer _customer_4 = deal.getCustomer();
    String _name_9 = _customer_4.getName();
    String _firstLower_3 = StringExtensions.toFirstLower(_name_9);
    _builder.append(_firstLower_3, "\t\t\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public ");
    RentalType _rentalType_2 = deal.getRentalType();
    String _name_10 = _rentalType_2.getName();
    String _firstUpper_6 = StringExtensions.toFirstUpper(_name_10);
    _builder.append(_firstUpper_6, "\t\t");
    _builder.append(" get");
    RentalType _rentalType_3 = deal.getRentalType();
    String _name_11 = _rentalType_3.getName();
    String _firstUpper_7 = StringExtensions.toFirstUpper(_name_11);
    _builder.append(_firstUpper_7, "\t\t");
    _builder.append("(){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    _builder.append("return ");
    RentalType _rentalType_4 = deal.getRentalType();
    String _name_12 = _rentalType_4.getName();
    String _firstLower_4 = StringExtensions.toFirstLower(_name_12);
    _builder.append(_firstLower_4, "\t\t\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    {
      EList<Attribute> _dealAttributes_1 = deal.getDealAttributes();
      for(final Attribute attribute_1 : _dealAttributes_1) {
        _builder.append("\t\t");
        _builder.append("public ");
        OfType _ofType_1 = attribute_1.getOfType();
        _builder.append(_ofType_1, "\t\t");
        _builder.append(" get");
        String _name_13 = attribute_1.getName();
        String _firstUpper_8 = StringExtensions.toFirstUpper(_name_13);
        _builder.append(_firstUpper_8, "\t\t");
        _builder.append("(){");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("return ");
        String _name_14 = attribute_1.getName();
        String _firstLower_5 = StringExtensions.toFirstLower(_name_14);
        _builder.append(_firstLower_5, "\t\t\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public void setId(Long id) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.id = id;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public void set");
    Customer _customer_5 = deal.getCustomer();
    String _name_15 = _customer_5.getName();
    String _firstUpper_9 = StringExtensions.toFirstUpper(_name_15);
    _builder.append(_firstUpper_9, "\t\t");
    _builder.append("(");
    Customer _customer_6 = deal.getCustomer();
    String _name_16 = _customer_6.getName();
    String _firstUpper_10 = StringExtensions.toFirstUpper(_name_16);
    _builder.append(_firstUpper_10, "\t\t");
    _builder.append(" ");
    Customer _customer_7 = deal.getCustomer();
    String _name_17 = _customer_7.getName();
    String _firstLower_6 = StringExtensions.toFirstLower(_name_17);
    _builder.append(_firstLower_6, "\t\t");
    _builder.append("){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    _builder.append("this.");
    Customer _customer_8 = deal.getCustomer();
    String _name_18 = _customer_8.getName();
    String _firstLower_7 = StringExtensions.toFirstLower(_name_18);
    _builder.append(_firstLower_7, "\t\t\t\t");
    _builder.append(" = ");
    Customer _customer_9 = deal.getCustomer();
    String _name_19 = _customer_9.getName();
    String _firstLower_8 = StringExtensions.toFirstLower(_name_19);
    _builder.append(_firstLower_8, "\t\t\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public void set");
    RentalType _rentalType_5 = deal.getRentalType();
    String _name_20 = _rentalType_5.getName();
    String _firstUpper_11 = StringExtensions.toFirstUpper(_name_20);
    _builder.append(_firstUpper_11, "\t\t");
    _builder.append("(");
    RentalType _rentalType_6 = deal.getRentalType();
    String _name_21 = _rentalType_6.getName();
    String _firstUpper_12 = StringExtensions.toFirstUpper(_name_21);
    _builder.append(_firstUpper_12, "\t\t");
    _builder.append(" ");
    RentalType _rentalType_7 = deal.getRentalType();
    String _name_22 = _rentalType_7.getName();
    String _firstLower_9 = StringExtensions.toFirstLower(_name_22);
    _builder.append(_firstLower_9, "\t\t");
    _builder.append("){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    _builder.append("this.");
    RentalType _rentalType_8 = deal.getRentalType();
    String _name_23 = _rentalType_8.getName();
    String _firstLower_10 = StringExtensions.toFirstLower(_name_23);
    _builder.append(_firstLower_10, "\t\t\t\t");
    _builder.append(" = ");
    RentalType _rentalType_9 = deal.getRentalType();
    String _name_24 = _rentalType_9.getName();
    String _firstLower_11 = StringExtensions.toFirstLower(_name_24);
    _builder.append(_firstLower_11, "\t\t\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    {
      EList<Attribute> _dealAttributes_2 = deal.getDealAttributes();
      for(final Attribute attribute_2 : _dealAttributes_2) {
        _builder.append("\t\t");
        _builder.append("public  void set");
        String _name_25 = attribute_2.getName();
        String _firstUpper_13 = StringExtensions.toFirstUpper(_name_25);
        _builder.append(_firstUpper_13, "\t\t");
        _builder.append("(");
        OfType _ofType_2 = attribute_2.getOfType();
        _builder.append(_ofType_2, "\t\t");
        _builder.append(" ");
        String _name_26 = attribute_2.getName();
        String _firstLower_12 = StringExtensions.toFirstLower(_name_26);
        _builder.append(_firstLower_12, "\t\t");
        _builder.append("){");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("this.");
        String _name_27 = attribute_2.getName();
        String _firstLower_13 = StringExtensions.toFirstLower(_name_27);
        _builder.append(_firstLower_13, "\t\t\t");
        _builder.append(" = ");
        String _name_28 = attribute_2.getName();
        String _firstLower_14 = StringExtensions.toFirstLower(_name_28);
        _builder.append(_firstLower_14, "\t\t\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateDealRepos(final Deal deal, final RentalSystem rentalSystem) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package de.nordakademie.xtext.hausarbeit.rentalSystem.web;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.springframework.data.repository.CrudRepository;");
    _builder.newLine();
    _builder.append("import org.springframework.stereotype.Repository;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Repository");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public interface I");
    String _name = deal.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "\t\t");
    _builder.append("Repository extends CrudRepository<");
    String _name_1 = deal.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper_1, "\t\t");
    _builder.append(", Long> {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateDealStateRepos(final Deal deal, final RentalSystem rentalSystem, final State state) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package de.nordakademie.xtext.hausarbeit.rentalSystem.web;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.springframework.data.repository.CrudRepository;");
    _builder.newLine();
    _builder.append("import org.springframework.stereotype.Repository;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Repository");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public interface I");
    String _name = deal.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    _builder.append(_firstUpper, "\t\t");
    String _name_1 = state.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    _builder.append(_firstUpper_1, "\t\t");
    _builder.append("Repository extends CrudRepository<");
    String _name_2 = deal.getName();
    String _firstUpper_2 = StringExtensions.toFirstUpper(_name_2);
    _builder.append(_firstUpper_2, "\t\t");
    String _name_3 = state.getName();
    String _firstUpper_3 = StringExtensions.toFirstUpper(_name_3);
    _builder.append(_firstUpper_3, "\t\t");
    _builder.append(", Long> {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateDealStateBeans(final Deal deal, final State state) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package de.nordakademie.xtext.hausarbeit.rentalSystem.web;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import javax.persistence.Entity;");
    _builder.newLine();
    _builder.append("import javax.persistence.GeneratedValue;");
    _builder.newLine();
    _builder.append("import javax.persistence.Id;");
    _builder.newLine();
    _builder.append("import javax.persistence.ManyToOne;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Entity");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public class ");
    String _name = deal.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    String _name_1 = state.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    String _plus = (_firstUpper + _firstUpper_1);
    _builder.append(_plus, "\t\t");
    _builder.append(" {");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Id");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@GeneratedValue");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("private Long id;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@ManyToOne");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("private ");
    String _name_2 = deal.getName();
    String _firstUpper_2 = StringExtensions.toFirstUpper(_name_2);
    _builder.append(_firstUpper_2, "\t\t");
    _builder.append(" ");
    String _name_3 = deal.getName();
    String _firstLower = StringExtensions.toFirstLower(_name_3);
    _builder.append(_firstLower, "\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public Long getId() {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("return id;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public ");
    String _name_4 = deal.getName();
    String _firstUpper_3 = StringExtensions.toFirstUpper(_name_4);
    _builder.append(_firstUpper_3, "\t\t");
    _builder.append(" get");
    String _name_5 = deal.getName();
    String _firstUpper_4 = StringExtensions.toFirstUpper(_name_5);
    _builder.append(_firstUpper_4, "\t\t");
    _builder.append("(){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("return ");
    String _name_6 = deal.getName();
    String _firstLower_1 = StringExtensions.toFirstLower(_name_6);
    _builder.append(_firstLower_1, "\t\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public void setId(Long id) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("this.id = id;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public void set");
    String _name_7 = deal.getName();
    String _firstUpper_5 = StringExtensions.toFirstUpper(_name_7);
    _builder.append(_firstUpper_5, "\t\t");
    _builder.append("(");
    String _name_8 = deal.getName();
    String _firstUpper_6 = StringExtensions.toFirstUpper(_name_8);
    _builder.append(_firstUpper_6, "\t\t");
    _builder.append(" ");
    String _name_9 = deal.getName();
    String _firstLower_2 = StringExtensions.toFirstLower(_name_9);
    _builder.append(_firstLower_2, "\t\t");
    _builder.append("){");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("this.");
    String _name_10 = deal.getName();
    String _firstLower_3 = StringExtensions.toFirstLower(_name_10);
    _builder.append(_firstLower_3, "\t\t\t");
    _builder.append(" = ");
    String _name_11 = deal.getName();
    String _firstLower_4 = StringExtensions.toFirstLower(_name_11);
    _builder.append(_firstLower_4, "\t\t\t");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence generateDealStateRepos(final Deal deal, final State state) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package de.nordakademie.xtext.hausarbeit.rentalSystem.web;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.springframework.data.repository.CrudRepository;");
    _builder.newLine();
    _builder.append("import org.springframework.stereotype.Repository;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("@Repository");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("public interface I");
    String _name = deal.getName();
    String _firstUpper = StringExtensions.toFirstUpper(_name);
    String _name_1 = state.getName();
    String _firstUpper_1 = StringExtensions.toFirstUpper(_name_1);
    String _plus = (_firstUpper + _firstUpper_1);
    _builder.append(_plus, "\t\t");
    _builder.append("Repository extends CrudRepository<");
    String _name_2 = deal.getName();
    String _firstUpper_2 = StringExtensions.toFirstUpper(_name_2);
    String _name_3 = state.getName();
    String _firstUpper_3 = StringExtensions.toFirstUpper(_name_3);
    String _plus_1 = (_firstUpper_2 + _firstUpper_3);
    _builder.append(_plus_1, "\t\t");
    _builder.append(", Long> {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
}
