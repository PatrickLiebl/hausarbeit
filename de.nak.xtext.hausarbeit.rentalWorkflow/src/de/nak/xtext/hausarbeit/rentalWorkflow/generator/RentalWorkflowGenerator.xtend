/*
 * generated by Xtext 2.9.2
 */
package de.nak.xtext.hausarbeit.rentalWorkflow.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import de.nak.xtext.hausarbeit.rentalWorkflow.rentalWorkflow.RentalWorkflow

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class RentalWorkflowGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		val rentalWorkflow = resource.contents.head as RentalWorkflow
		if(rentalWorkflow != null) {
			fsa.generateFile("main/RentalWorkflow.java", rentalWorkflow.toRentalFlow)
		}
	}
	
	def toRentalFlow(RentalWorkflow rentalWorkflow) '''
		package main;
		
		import de.nak.xtext.hausarbeit.rentalWorkflow.runtime.IRentalWorkflow;
		
		public class RentalWorkflow implements IRentalWorkflow {
			
			public String getFirstPage() {
				return "«rentalWorkflow.states.head.name»";
			}
			
			public String getNextPage(IFormState formState) {
				String currentPage = formState.getCurrentPage();
				if(currentPage == null)
					return getFirstPage();
				«FOR state: rentalWorkflow.states»

				«ENDFOR»
				return null;
			}
		}
	'''
}
